!(function (e) {
  "use strict";
  (e.fn.palleon = function (a) {
    var n,
      t = e(this),
      l = document.body.clientWidth,
      i = e.extend(
        {
          fontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          fontSize: 60,
          fontWeight: "normal",
          fontStyle: "normal",
          lineHeight: 1,
          canvasColor: "transparent",
          fill: "#000",
          stroke: "#fff",
          strokeWidth: 0,
          textBackgroundColor: "rgba(255,255,255,0)",
          textAlign: "left",
          lineHeight: 1.2,
          shapeColor: "#fff",
          borderColor: "#000",
          borderDashArray: [4, 4],
          borderOpacityWhenMoving: 0.5,
          borderScaleFactor: 2,
          editingBorderColor: "rgba(0,0,0,0.5)",
          cornerColor: "#fff",
          cornerSize: 12,
          cornerStrokeColor: "#000",
          cornerStyle: "circle",
          transparentCorners: !1,
          cursorColor: "#000",
          cursorWidth: 2,
          enableGLFiltering: !0,
          textureSize: 4096,
        },
        a
      ),
      o = "none",
      r = "",
      s = "",
      c = "",
      d = "",
      p = 0,
      f = 1,
      h = 1,
      g = "left",
      m = "top",
      u = "",
      b = [],
      v = "",
      y = "",
      k = "",
      w = "",
      x = "add-to-canvas",
      C = [
        "circle",
        "square",
        "rectangle",
        "triangle",
        "ellipse",
        "trapezoid",
        "emerald",
        "star",
      ],
      j = ["square", "rectangle", "triangle"],
      I = [
        [
          "Helvetica Neue",
          "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
        ],
        ["Impact", "Impact, Charcoal, sans-serif"],
        ["Georgia", "Georgia, serif"],
        [
          "Palatino Linotype",
          "'Palatino Linotype', 'Book Antiqua', Palatino, serif",
        ],
        ["Times New Roman", "'Times New Roman', Times, serif"],
        ["Arial", "Arial, Helvetica, sans-serif"],
        ["Arial Black", "'Arial Black', Gadget, sans-serif"],
        ["Comic Sans", "'Comic Sans MS', cursive, sans-serif"],
        ["Lucida Sans", "'Lucida Sans Unicode', 'Lucida Grande', sans-serif"],
        ["Tahoma", "Tahoma, Geneva, sans-serif"],
        ["Trebuchet", "'Trebuchet MS', Helvetica, sans-serif"],
        ["Verdana", "Verdana, Geneva, sans-serif"],
        ["Courier New", "'Courier New', Courier, monospace"],
        ["Lucida Console", "'Lucida Console', Monaco, monospace"],
      ];
    t.find(".crop-custom").css("display", "none");
    for (
      var P = new LazyLoad({
          callback_error: (a) => {
            a.setAttribute(
              "src",
              palleonParams.baseURL + "assets/placeholder.png"
            ),
              e(a).parent().css("min-height", "auto"),
              e(a).parent().find(".palleon-img-loader").remove();
          },
          callback_loaded: (a) => {
            e(a).parent().css("min-height", "auto"),
              e(a).parent().find(".palleon-img-loader").remove();
          },
        }),
        A = 0;
      A < I.length;
      A++
    )
      t.find("#websafe-fonts").append(
        e('<option class="websafe-font"></option>')
          .attr("value", I[A][1])
          .text(I[A][0])
      );
    function S(e) {
      var a = e.find(">*"),
        n = a.length,
        l = parseInt(e.data("perpage"));
      if (n > l) {
        a.slice(l).hide();
        var i =
          '<div id="' +
          e.attr("id") +
          '-pagination" class="palleon-pagination"></div>';
        e.after(i),
          t.find("#" + e.attr("id") + "-pagination").pagination({
            items: n,
            itemsOnPage: l,
            prevText: '<span class="material-icons">navigate_before</span>',
            nextText: '<span class="material-icons">navigate_next</span>',
            displayedPages: 3,
            onPageClick: function (e, n) {
              void 0 !== n && n.preventDefault();
              var t = l * (e - 1),
                i = t + l;
              a.hide().slice(t, i).show();
            },
          }),
          t
            .find("#" + e.attr("id") + "-pagination")
            .pagination("selectPage", 1);
      }
    }
    function O(e) {
      for (
        var a = e.split(","),
          n = a[0].match(/:(.*?);/)[1],
          t = atob(a[1]),
          l = t.length,
          i = new Uint8Array(l);
        l--;

      )
        i[l] = t.charCodeAt(l);
      return new Blob([i], { type: n });
    }
    function T(e, a) {
      var n = new XMLHttpRequest();
      (n.onload = function () {
        var e = new FileReader();
        (e.onloadend = function () {
          a(e.result);
        }),
          e.readAsDataURL(n.response);
      }),
        n.open("GET", e),
        (n.responseType = "blob"),
        n.send();
    }
    function R() {
      t.removeClass("panel-closed"),
        t.find(".palleon-icon-menu-btn").removeClass("active"),
        t.find("#palleon-icon-menu").removeClass("closed"),
        t.find("#palleon-toggle-left").removeClass("closed"),
        t
          .find("#palleon-toggle-left")
          .find(".material-icons")
          .html("chevron_left"),
        t.find("#palleon-icon-panel").show();
    }
    function F() {
      t.addClass("panel-closed"),
        t.find(".palleon-icon-menu-btn").removeClass("active"),
        t.find("#palleon-icon-menu").addClass("closed"),
        t.find("#palleon-toggle-left").addClass("closed"),
        t
          .find("#palleon-toggle-left")
          .find(".material-icons")
          .html("chevron_right"),
        t.find("#palleon-icon-panel").hide();
    }
    function q(e, a) {
      "" == e && (e = new Date().getTime()),
        "" == a ? (a = "jpeg") : "jpg" == a && (a = "jpeg"),
        t.find(".palleon-file-name").val(e),
        t.find(".palleon-file-name").data("default", e),
        t.find("#palleon-save-img-format").val(a),
        t.find("#palleon-save-img-format").trigger("change");
    }
    function X(e) {
      if (
        ("" != t.find("#palleon-canvas-img").data("id") &&
          t.find("#palleon-new").remove(),
        t.find("#palleon-canvas-loader").css("display", "flex"),
        t
          .find("#palleon-canvas-wrap, .palleon-content-bar")
          .css("visibility", "visible"),
        (o = e),
        u.backgroundImage && (b = u.backgroundImage.filters),
        "canvas" == o)
      ) {
        t.find("#palleon-canvas-color").trigger("change");
        var a = document.createElement("canvas"),
          n = new fabric.Canvas(a),
          l = parseInt(t.find("#palleon-canvas-width").val()),
          i = parseInt(t.find("#palleon-canvas-height").val());
        "" == l && (l = 800),
          "" == i && (i = 800),
          n.setWidth(l),
          n.setHeight(i),
          (n.backgroundColor = "transparent");
        var v = O(n.toDataURL({ format: "png", enableRetinaScaling: !1 })),
          y = URL.createObjectURL(v);
        t.find("#palleon-canvas-img").attr("src", y), n.dispose();
      }
      t.find("#palleon-canvas-img-wrap").imagesLoaded(function () {
        (r = t.find("#palleon-canvas-img")[0]),
          (s = t.find("#palleon-canvas-img").attr("src")),
          (c = r.width),
          (d = r.height),
          W(r),
          u.setDimensions({ width: c, height: d }),
          fabric.Image.fromURL(s, function (e) {
            u.setBackgroundImage(
              e,
              u.renderAll.bind(u),
              {
                objectType: "BG",
                mode: o,
                scaleX: f,
                scaleY: h,
                selectable: !1,
                lockMovementX: !0,
                lockMovementY: !0,
                lockRotation: !0,
                erasable: !0,
              },
              { crossOrigin: "anonymous" }
            );
          }),
          M(),
          Y(),
          setTimeout(function () {
            !(function () {
              if (
                ((p = 0),
                (f = 1),
                (h = 1),
                (g = "left"),
                (m = "top"),
                t.find("#keep-data").is(":checked"))
              )
                (u.backgroundImage.filters = b),
                  u.backgroundImage.applyFilters();
              else {
                (u.backgroundImage.filters = []),
                  t
                    .find("#palleon-adjust .conditional-settings")
                    .addClass("d-none"),
                  t.find("#palleon-brightness").prop("checked", !1),
                  t.find("#brightness").val(0),
                  t.find("#palleon-contrast").prop("checked", !1),
                  t.find("#contrast").val(0),
                  t.find("#palleon-saturation").prop("checked", !1),
                  t.find("#saturation").val(0),
                  t.find("#palleon-hue").prop("checked", !1),
                  t.find("#hue").val(0),
                  t
                    .find("#palleon-filters input[type=checkbox]")
                    .prop("checked", !1),
                  t.find("#palleon-gamma").prop("checked", !1),
                  t.find("#gamma-red").val(1),
                  t.find("#gamma-green").val(1),
                  t.find("#gamma-blue").val(1),
                  t.find("#palleon-blend-color").prop("checked", !1),
                  t.find("#blend-color-mode").val("add"),
                  t.find("#blend-color-color").spectrum("set", "#ffffff"),
                  t.find("#blend-color-alpha").val(0.5),
                  t
                    .find("#blend-color-alpha")
                    .parent()
                    .parent()
                    .find(".slider-label span")
                    .html(0.5),
                  t.find("#palleon-duotone-color").prop("checked", !1),
                  t.find("#duotone-light-color").spectrum("set", "green"),
                  t.find("#duotone-dark-color").spectrum("set", "blue"),
                  t.find("#palleon-swap-colors").prop("checked", !1),
                  t.find("#palleon-blur").prop("checked", !1),
                  t.find("#blur").val(0),
                  t.find("#palleon-noise").prop("checked", !1),
                  t.find("#noise").val(0),
                  t.find("#palleon-pixelate").prop("checked", !1),
                  t.find("#pixelate").val(1);
                var e = u.getObjects();
                e
                  .filter((e) => "BG" != e.objectType)
                  .forEach((e) => u.remove(e)),
                  t.find("#palleon-layers li").remove(),
                  B();
              }
              u.fire("selection:cleared"), u.requestRenderAll();
            })();
          }, 100),
          t.find("#palleon-canvas-loader").hide();
      });
    }
    (e.getJSON(palleonParams.baseURL + "json/google-fonts.json", function (a) {
      for (var n = 0; n < a.items.length; n++)
        t.find("#google-fonts").append(
          e('<option class="google-font"></option>')
            .attr("value", a.items[n].family)
            .text(a.items[n].family)
        );
    }),
    e.getJSON(palleonParams.baseURL + "json/material-icons.json", function (e) {
      for (var a = palleonParams.sourceURL, n = 0; n < e.categories.length; n++)
        for (var l = e.categories[n], i = 0; i < l.icons.length; i++) {
          var o =
            a + "icons/" + l.icons[i].group_id + "/" + l.icons[i].ligature;
          t.find("#palleon-icons .palleon-grid").append(
            '<div class="palleon-element add-element" data-elsource="' +
              o +
              '" data-loader="no" title="' +
              l.icons[i].name +
              '"><span class="material-icons">' +
              l.icons[i].ligature +
              "</div>"
          );
        }
    }),
    t
      .find(".palleon-select.palleon-select2")
      .select2({
        theme: "dark",
        width: "100%",
        templateSelection: N,
        templateResult: N,
        allowHtml: !0,
      }),
    t
      .find(".palleon-colorpicker.disallow-empty")
      .spectrum({ allowEmpty: !1, showInitial: !0 }),
    t
      .find(".palleon-colorpicker.allow-empty")
      .spectrum({ allowEmpty: !0, showInitial: !1 }),
    (toastr.options.closeButton = !0),
    (toastr.options.positionClass = "toast-bottom-left"),
    (toastr.options.progressBar = !0),
    (toastr.options.newestOnTop = !0),
    (toastr.options.showEasing = "swing"),
    (toastr.options.hideEasing = "linear"),
    (toastr.options.closeEasing = "linear"),
    t.find("#palleon-canvas-wrap").draggable({ disabled: !0 }),
    t.find(".paginated").each(function () {
      S(e(this));
    }),
    t.find("#palleon-toggle-left").on("click", function () {
      e(this).hasClass("closed") ? R() : F();
    }),
    t.find("#palleon-toggle-right").on("click", function () {
      e(this).hasClass("closed")
        ? (t.removeClass("layers-closed"),
          e(this).removeClass("closed"),
          e(this).find(".material-icons").html("chevron_right"),
          t.find("#palleon-right-col").show())
        : (t.addClass("layers-closed"),
          e(this).addClass("closed"),
          e(this).find(".material-icons").html("chevron_left"),
          t.find("#palleon-right-col").hide());
    }),
    t.find(".palleon-toggle-right").on("click", function (e) {
      e.preventDefault(), t.find("#palleon-toggle-right").trigger("click");
    }),
    l <= 1200 &&
      (t.find("#palleon-toggle-right").trigger("click"),
      t.find("#palleon-toggle-left").trigger("click")),
    t.find(".palleon-icon-menu-btn").on("click", function () {
      e(this).data("target") &&
        (e(this).hasClass("active")
          ? F()
          : (R(),
            e(this).addClass("active"),
            t.find(".palleon-icon-panel-content").addClass("panel-hide"),
            t.find(e(this).data("target")).removeClass("panel-hide"))),
        "palleon-btn-elements" == e(this).attr("id") &&
          t.find("#palleon-all-elements-open").trigger("click");
    }),
    t.find(".palleon-dropdown-wrap").on("click", function () {
      e(this).hasClass("opened")
        ? (e(this).removeClass("opened"),
          e(this).find(".palleon-dropdown").hide())
        : (e(this).addClass("opened"),
          e(this).find(".palleon-dropdown").show());
    }),
    t
      .find(".palleon-icon-panel-content ul.palleon-accordion > li > a")
      .on("click", function (a) {
        a.preventDefault();
        var n = e(this).parent().parent();
        e(this).parent().hasClass("opened")
          ? n.find("li").removeClass("opened")
          : (n.find("li").removeClass("opened"),
            e(this).parent().addClass("opened"));
      }),
    t.find(".palleon-lock-unlock").on("click", function () {
      e(this).hasClass("active")
        ? (e(this).removeClass("active"),
          e(this).find(".material-icons").html("lock_open"))
        : (e(this).addClass("active"),
          e(this).find(".material-icons").html("lock"));
    }),
    t.find(".palleon-slider").on("input", function () {
      e(this).parent().parent().find(".slider-label span").html(e(this).val()),
        t.find("span.tm-count-zoom").html(e(this).val());
    }),
    t.find('input[type="checkbox"]').on("change", function () {
      e(this).data("conditional") &&
        (e(this).is(":checked")
          ? t.find(e(this).data("conditional")).removeClass("d-none")
          : t.find(e(this).data("conditional")).addClass("d-none"));
    }),
    t.find(".palleon-tabs-menu li").on("click", function () {
      var a = e(this).data("target"),
        n = e(this).parent().parent();
      n.find("> .palleon-tab").removeClass("active"),
        e(a).addClass("active"),
        n.find("> .palleon-tabs-menu li").removeClass("active"),
        e(this).addClass("active");
    }),
    t
      .find('input[type="number"],.numeric-field')
      .bind("input paste keyup keydown", function () {
        (this.value = this.value
          .replace(/(?!^-)[^0-9.]/g, "")
          .replace(/(\..*)\./g, "$1")),
          e(this).data("max") &&
            this.value > e(this).data("max") &&
            (this.value = e(this).data("max")),
          e(this).data("min") &&
            this.value < e(this).data("min") &&
            (this.value = e(this).data("min"));
      }),
    t.find(".palleon-counter .counter-plus").on("click", function () {
      var a = e(this).parent().find("input.palleon-form-field"),
        n = parseInt(a.val()) + parseInt(a.data("step"));
      a.data("max") && n > a.data("max") && (n = a.data("max")),
        a.data("min") && n < a.data("min") && (n = a.data("min")),
        n < 0 && (n = 0),
        a.val(n),
        "palleon-img-zoom-in" == e(this).attr("id") && M(n);
    }),
    t.find(".palleon-counter .counter-minus").on("click", function () {
      var a = e(this).parent().find("input.palleon-form-field"),
        n = parseInt(a.val()) - parseInt(a.data("step"));
      a.data("max") && n > a.data("max") && (n = a.data("max")),
        a.data("min") && n < a.data("min") && (n = a.data("min")),
        n < 0 && (n = 0),
        a.val(n),
        "palleon-img-zoom-out" == e(this).attr("id") && M(n);
    }),
    (fabric.enableGLFiltering = i.enableGLFiltering),
    (fabric.textureSize = parseInt(i.textureSize)),
    (fabric.Object.prototype.borderColor = i.borderColor),
    (fabric.Object.prototype.borderDashArray = i.borderDashArray),
    (fabric.Object.prototype.borderOpacityWhenMoving =
      i.borderOpacityWhenMoving),
    (fabric.Object.prototype.borderScaleFactor = i.borderScaleFactor),
    (fabric.Object.prototype.editingBorderColor = i.editingBorderColor),
    (fabric.Object.prototype.cornerColor = i.cornerColor),
    (fabric.Object.prototype.cornerSize = i.cornerSize),
    (fabric.Object.prototype.cornerStrokeColor = i.cornerStrokeColor),
    (fabric.Object.prototype.cornerStyle = i.cornerStyle),
    (fabric.Object.prototype.transparentCorners = i.transparentCorners),
    (fabric.Object.prototype.cursorColor = i.cursorColor),
    (fabric.Object.prototype.cursorWidth = i.cursorWidth),
    (fabric.Object.prototype.strokeUniform = !0),
    (fabric.Group.prototype.padding = 0),
    (fabric.Object.prototype.erasable = !1),
    (fabric.Image.filters.Shift = fabric.util.createClass(
      fabric.Image.filters.ColorMatrix,
      {
        type: "Shift",
        matrix: [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0],
        mainParameter: !1,
        colorsOnly: !0,
      }
    )),
    (n = t.find("#palleon-canvas")[0]),
    ((u = new fabric.Canvas(n)).backgroundColor = i.canvasColor),
    "" != t.find("#palleon-canvas-img").attr("src")) &&
      ((o = "image"),
      q(
        t.find("#palleon-canvas-img").data("filename"),
        t
          .find("#palleon-canvas-img")
          .attr("src")
          .match(/\.[0-9a-z]+$/i)[0]
          .replace(/\./g, "")
      ),
      X(o));
    function Y() {
      "none" == o
        ? (t
            .find("#palleon-icon-menu, #palleon-icon-panel")
            .css("pointer-events", "none"),
          t.find(".palleon-keep").hide(),
          t.find("#modal-add-new").show(),
          t.find("#palleon-save").prop("disabled", !0))
        : (t
            .find("#palleon-canvas-wrap, .palleon-content-bar")
            .css("visibility", "visible"),
          t
            .find("#palleon-icon-menu, #palleon-icon-panel")
            .css("pointer-events", "auto"),
          t.find(".palleon-keep").show(),
          t.find("#modal-add-new").hide(),
          t.find("#palleon-save").prop("disabled", !1)),
        "canvas" == o
          ? (t.find("#palleon-resize-lock").removeClass("active"),
            t.find("#palleon-crop-lock").removeClass("active"),
            t.find(".hide-on-canvas-mode").hide())
          : (t.find("#palleon-resize-lock").addClass("active"),
            t.find("#palleon-crop-lock").addClass("active"),
            t.find(".hide-on-canvas-mode").show());
    }
    function z(a) {
      t.find("#palleon-canvas-loader").css("display", "flex"),
        (p = 0),
        (f = 1),
        (h = 1),
        (g = "left"),
        (m = "top"),
        u.clear(),
        t.find("#palleon-layers li").remove(),
        (o = a.backgroundImage.mode),
        (c = a.backgroundImage.width),
        (d = a.backgroundImage.height);
      var n = O(a.backgroundImage.src);
      (s = URL.createObjectURL(n)),
        t.find("#palleon-canvas-img").attr("src", s);
      for (var l = { width: c, height: d }, r = 0; r < a.objects.length; r++)
        "textbox" == a.objects[r].objectType &&
          (a.objects[r].fontFamily = a.objects[r].fontFamily + "-palleon");
      u.loadFromJSON(
        a,
        function () {
          !(function (a) {
            0 !== a.length &&
              e.each(a, function (e, a) {
                var n = a.fontFamily.replace("-palleon", "");
                a.fontFamily = i.fontFamily;
                var t = "yes";
                if ("" == n) t = "no";
                else
                  for (var l = 0; l < I.length; l++)
                    if (I[l][1] == n) {
                      t = "no";
                      break;
                    }
                if ("yes" == t) {
                  "undefined" == typeof palleonCustomFonts
                    ? WebFont.load({
                        google: {
                          families: [
                            n + ":regular,bold",
                            n + ":italic,regular,bold",
                          ],
                        },
                      })
                    : palleonCustomFonts.fonts.includes(n) ||
                      WebFont.load({
                        google: {
                          families: [
                            n + ":regular,bold",
                            n + ":italic,regular,bold",
                          ],
                        },
                      });
                  var o = new FontFaceObserver(n, {
                      weight: "normal",
                      style: "normal",
                    }),
                    r = new FontFaceObserver(n, {
                      weight: "bold",
                      style: "normal",
                    }),
                    s = new FontFaceObserver(n, {
                      weight: "normal",
                      style: "italic",
                    }),
                    c = new FontFaceObserver(n, {
                      weight: "bold",
                      style: "italic",
                    });
                  Promise.all([
                    o.load(null, 5e3),
                    r.load(null, 5e3),
                    s.load(null, 5e3),
                    c.load(null, 5e3),
                  ])
                    .then(function () {
                      a.set("fontFamily", n), u.requestRenderAll();
                    })
                    .catch(function (e) {
                      console.log(e);
                    });
                } else a.set("fontFamily", n), u.requestRenderAll();
              });
          })(u.getObjects().filter((e) => "textbox" == e.objectType)),
            B(),
            u.requestRenderAll(),
            t.find("#palleon-canvas-loader").hide();
        },
        function () {},
        { crossOrigin: "anonymous" }
      ),
        q(new Date().getTime(), ""),
        W(l),
        M(),
        Y(),
        u.fire("selection:cleared"),
        t.find("#palleon-canvas-color").spectrum("set", u.backgroundColor),
        t.find("#custom-image-background").spectrum("set", u.backgroundColor),
        setTimeout(function () {
          var n;
          t.find("#palleon-layers > li").removeClass("active"),
            (n = a.backgroundImage.filters),
            t.find("#palleon-brightness").prop("checked", !1),
            t.find("#palleon-contrast").prop("checked", !1),
            t.find("#palleon-saturation").prop("checked", !1),
            t.find("#palleon-hue").prop("checked", !1),
            t.find("#grayscale").prop("checked", !1),
            t.find("#sepia").prop("checked", !1),
            t.find("#brownie").prop("checked", !1),
            t.find("#blackwhite").prop("checked", !1),
            t.find("#vintage").prop("checked", !1),
            t.find("#kodachrome").prop("checked", !1),
            t.find("#polaroid").prop("checked", !1),
            t.find("#technicolor").prop("checked", !1),
            t.find("#invert").prop("checked", !1),
            t.find("#sharpen").prop("checked", !1),
            t.find("#emboss").prop("checked", !1),
            t.find("#palleon-gamma").prop("checked", !1),
            t.find("#palleon-blend-color").prop("checked", !1),
            t.find("#palleon-duotone-color").prop("checked", !1),
            t.find("#palleon-blur").prop("checked", !1),
            t.find("#palleon-noise").prop("checked", !1),
            t.find("#palleon-pixelate").prop("checked", !1),
            0 !== n.length &&
              e.each(n, function (e, a) {
                "Brightness" == a.type
                  ? (t.find("#palleon-brightness").prop("checked", !0),
                    t.find("#brightness").val(a.brightness),
                    t
                      .find("#brightness")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.brightness))
                  : "Contrast" == a.type
                  ? (t.find("#palleon-contrast").prop("checked", !0),
                    t.find("#contrast").val(a.brightness),
                    t
                      .find("#contrast")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.contrast))
                  : "Saturation" == a.type
                  ? (t.find("#palleon-saturation").prop("checked", !0),
                    t.find("#saturation").val(a.brightness),
                    t
                      .find("#saturation")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.saturation))
                  : "HueRotation" == a.type
                  ? (t.find("#palleon-hue").prop("checked", !0),
                    t.find("#hue").val(a.rotation),
                    t
                      .find("#hue")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.rotation))
                  : "Grayscale" == a.type
                  ? t.find("#grayscale").prop("checked", !0)
                  : "Sepia" == a.type
                  ? t.find("#sepia").prop("checked", !0)
                  : "Brownie" == a.type
                  ? t.find("#brownie").prop("checked", !0)
                  : "BlackWhite" == a.type
                  ? t.find("#blackwhite").prop("checked", !0)
                  : "Vintage" == a.type
                  ? t.find("#vintage").prop("checked", !0)
                  : "Kodachrome" == a.type
                  ? t.find("#kodachrome").prop("checked", !0)
                  : "Polaroid" == a.type
                  ? t.find("#polaroid").prop("checked", !0)
                  : "Technicolor" == a.type
                  ? t.find("#technicolor").prop("checked", !0)
                  : "Invert" == a.type
                  ? t.find("#invert").prop("checked", !0)
                  : "Convolute" == a.type
                  ? "[0,-1,0,-1,5,-1,0,-1,0]" == a.matrix
                    ? t.find("#sharpen").prop("checked", !0)
                    : "[1,1,1,1,0.7,-1,-1,-1,-1]" == a.matrix
                    ? t.find("#emboss").prop("checked", !0)
                    : "[-1,0,1,-2,0,2,-1,0,1]" == a.matrix
                    ? t.find("#sobelX").prop("checked", !0)
                    : "[-1,-2,-1,0,0,0,1,2,1]" == a.matrix &&
                      t.find("#sobelY").prop("checked", !0)
                  : "Gamma" == a.type
                  ? (t.find("#palleon-gamma").prop("checked", !0),
                    t.find("#gamma-red").val(a.gamma[0]),
                    t
                      .find("#gamma-red")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.gamma[0]),
                    t.find("#gamma-green").val(a.gamma[1]),
                    t
                      .find("#gamma-green")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.gamma[1]),
                    t.find("#gamma-blue").val(a.gamma[2]),
                    t
                      .find("#gamma-blue")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.gamma[2]))
                  : "BlendColor" == a.type
                  ? (t.find("#palleon-blend-color").prop("checked", !0),
                    t.find("#blend-color-mode").val(a.mode),
                    t.find("#blend-color-color").val(a.color),
                    t.find("#blend-color-alpha").val(a.alpha),
                    t
                      .find("#blend-color-alpha")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.alpha))
                  : "Composed" == a.type
                  ? (t.find("#palleon-duotone-color").prop("checked", !0),
                    t.find("#duotone-light-color").val(a.subFilters[1].color),
                    t.find("#duotone-dark-color").val(a.subFilters[2].color))
                  : "Blur" == a.type
                  ? (t.find("#palleon-blur").prop("checked", !0),
                    t.find("#blur").val(a.blur),
                    t
                      .find("#blur")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.blur))
                  : "Noise" == a.type
                  ? (t.find("#palleon-noise").prop("checked", !0),
                    t.find("#noise").val(a.noise),
                    t
                      .find("#noise")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.noise))
                  : "Pixelate" == a.type &&
                    (t.find("#palleon-pixelate").prop("checked", !0),
                    t.find("#pixelate").val(a.blocksize),
                    t
                      .find("#pixelate")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(a.blocksize));
              }),
            t.find("#palleon-brightness").trigger("change"),
            t.find("#palleon-contrast").trigger("change"),
            t.find("#palleon-saturation").trigger("change"),
            t.find("#palleon-hue").trigger("change"),
            t.find("#palleon-gamma").trigger("change"),
            t.find("#palleon-blend-color").trigger("change"),
            t.find("#palleon-blur").trigger("change"),
            t.find("#palleon-noise").trigger("change"),
            t.find("#palleon-pixelate").trigger("change");
        }, 100);
    }
    function B() {
      t.find("#palleon-layers li").length
        ? (t.find("#palleon-no-layer").hide(),
          t.find("#palleon-layer-delete-wrap").css("visibility", "visible"))
        : (t.find("#palleon-no-layer").show(),
          t.find("#palleon-layer-delete-wrap").css("visibility", "hidden"));
    }
    function D(a) {
      if ((t.find("#palleon-layers li").removeClass("active"), a.length >= 2))
        for (var n = 0; n < a.length; n++)
          t.find("#palleon-layers #" + a[n].id).addClass("active");
      else
        (a = a[0]).objectType
          ? ("textbox" == a.objectType
              ? (t.find("#palleon-text-settings").show(),
                (function (e) {
                  t.find("#palleon-text-input").val(e.text),
                    t.find("#palleon-font-family").val(e.fontFamily),
                    t.find("#palleon-font-family").trigger("change"),
                    "none" == e.gradientFill
                      ? (t.find("#palleon-text-gradient").val("none"),
                        t.find("#palleon-text-color").spectrum("set", e.fill))
                      : "vertical" == e.gradientFill
                      ? (t.find("#palleon-text-gradient").val("vertical"),
                        4 == e.fill.colorStops.length
                          ? (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", e.fill.colorStops[3].color))
                          : 3 == e.fill.colorStops.length
                          ? (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", ""))
                          : 2 == e.fill.colorStops.length &&
                            (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", ""),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", "")))
                      : "horizontal" == e.gradientFill &&
                        (t.find("#palleon-text-gradient").val("horizontal"),
                        4 == e.fill.colorStops.length
                          ? (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", e.fill.colorStops[3].color))
                          : 3 == e.fill.colorStops.length
                          ? (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", ""))
                          : 2 == e.fill.colorStops.length &&
                            (t
                              .find("#text-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#text-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#text-gradient-color-3")
                              .spectrum("set", ""),
                            t
                              .find("#text-gradient-color-4")
                              .spectrum("set", "")));
                  t.find("#palleon-text-gradient").trigger("change"),
                    "bold" == e.fontWeight
                      ? t.find("#format-bold").addClass("active")
                      : t.find("#format-bold").removeClass("active");
                  "italic" == e.fontStyle
                    ? t.find("#format-italic").addClass("active")
                    : t.find("#format-italic").removeClass("active");
                  1 == e.underline
                    ? t.find("#format-underline").addClass("active")
                    : t.find("#format-underline").removeClass("active");
                  "left" == e.textAlign &&
                    (t.find(".format-align").removeClass("active"),
                    t.find("#format-align-left").addClass("active"));
                  "right" == e.textAlign &&
                    (t.find(".format-align").removeClass("active"),
                    t.find("#format-align-right").addClass("active"));
                  "center" == e.textAlign &&
                    (t.find(".format-align").removeClass("active"),
                    t.find("#format-align-center").addClass("active"));
                  "justify" == e.textAlign &&
                    (t.find(".format-align").removeClass("active"),
                    t.find("#format-align-justify").addClass("active"));
                  t.find("#palleon-font-size").val(e.fontSize),
                    t.find("#palleon-outline-size").val(e.strokeWidth),
                    t.find("#palleon-line-height").val(e.lineHeight),
                    t.find("#palleon-letter-spacing").val(e.charSpacing),
                    t.find("#palleon-outline-color").spectrum("set", e.stroke),
                    t
                      .find("#palleon-text-background")
                      .spectrum("set", e.textBackgroundColor),
                    null == e.shadow
                      ? t.find("#palleon-text-shadow").prop("checked", !1)
                      : (t.find("#palleon-text-shadow").prop("checked", !0),
                        t
                          .find("#text-shadow-color")
                          .spectrum("set", e.shadow.color),
                        t.find("#text-shadow-blur").val(e.shadow.blur),
                        t.find("#text-shadow-offset-x").val(e.shadow.offsetX),
                        t.find("#text-shadow-offset-y").val(e.shadow.offsetY));
                  t.find("#palleon-text-shadow").trigger("change"),
                    1 == e.flipX
                      ? t.find("#text-flip-x").addClass("active")
                      : t.find("#text-flip-x").removeClass("active");
                  1 == e.flipY
                    ? t.find("#text-flip-y").addClass("active")
                    : t.find("#text-flip-y").removeClass("active");
                  t.find("#text-skew-x").val(e.skewX),
                    t
                      .find("#text-skew-x")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewX),
                    t.find("#text-skew-y").val(e.skewY),
                    t
                      .find("#text-skew-y")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewY),
                    t.find("#text-rotate").val(parseInt(e.angle)),
                    t
                      .find("#text-rotate")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(parseInt(e.angle));
                })(a),
                t.find("#palleon-btn-text").hasClass("active") ||
                  t.find("#palleon-btn-text").trigger("click"),
                t.find("#palleon-font-family").trigger("change"))
              : t.find("#palleon-text-settings").hide(),
            "image" == a.objectType
              ? (t.find("#palleon-image-settings").show(),
                (function (e) {
                  t.find("#img-border-radius").val(e.roundedCorders),
                    t
                      .find("#img-border-radius")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.roundedCorders),
                    null == e.shadow
                      ? t.find("#palleon-image-shadow").prop("checked", !1)
                      : (t.find("#palleon-image-shadow").prop("checked", !0),
                        t
                          .find("#image-shadow-color")
                          .spectrum("set", e.shadow.color),
                        t.find("#image-shadow-blur").val(e.shadow.blur),
                        t.find("#image-shadow-offset-x").val(e.shadow.offsetX),
                        t.find("#image-shadow-offset-y").val(e.shadow.offsetY));
                  t.find("#palleon-image-shadow").trigger("change"),
                    t.find("#img-border-width").val(e.strokeWidth),
                    t.find("#img-border-color").spectrum("set", e.stroke),
                    t.find("#img-opacity").val(e.opacity),
                    t
                      .find("#img-opacity")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.opacity),
                    t.find("#img-skew-x").val(e.skewX),
                    t
                      .find("#img-skew-x")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewX),
                    t.find("#img-skew-y").val(e.skewY),
                    t
                      .find("#img-skew-y")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewY),
                    t.find("#img-rotate").val(parseInt(e.angle)),
                    t
                      .find("#img-rotate")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(parseInt(e.angle));
                })(a),
                t.find("#palleon-btn-image").hasClass("active") ||
                  t.find("#palleon-btn-image").trigger("click"))
              : t.find("#palleon-image-settings").hide(),
            "frame" == a.objectType &&
              (t.find("#palleon-btn-frames").hasClass("active") ||
                t.find("#palleon-btn-frames").trigger("click")),
            "element" == a.objectType
              ? (t.find("#palleon-custom-element-options").show(),
                t.find("#palleon-custom-element-options-info").hide(),
                (function (e) {
                  "none" == e.gradientFill
                    ? (t.find("#palleon-element-gradient").val("none"),
                      t.find("#palleon-element-color").spectrum("set", e.fill))
                    : "vertical" == e.gradientFill
                    ? (t.find("#palleon-element-gradient").val("vertical"),
                      4 == e.fill.colorStops.length
                        ? (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", e.fill.colorStops[2].color),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", e.fill.colorStops[3].color))
                        : 3 == e.fill.colorStops.length
                        ? (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", e.fill.colorStops[2].color),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", ""))
                        : 2 == e.fill.colorStops.length &&
                          (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", ""),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", "")))
                    : "horizontal" == e.gradientFill &&
                      (t.find("#palleon-element-gradient").val("horizontal"),
                      4 == e.fill.colorStops.length
                        ? (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", e.fill.colorStops[2].color),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", e.fill.colorStops[3].color))
                        : 3 == e.fill.colorStops.length
                        ? (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", e.fill.colorStops[2].color),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", ""))
                        : 2 == e.fill.colorStops.length &&
                          (t
                            .find("#element-gradient-color-1")
                            .spectrum("set", e.fill.colorStops[0].color),
                          t
                            .find("#element-gradient-color-2")
                            .spectrum("set", e.fill.colorStops[1].color),
                          t
                            .find("#element-gradient-color-3")
                            .spectrum("set", ""),
                          t
                            .find("#element-gradient-color-4")
                            .spectrum("set", "")));
                  t.find("#palleon-element-gradient").trigger("change"),
                    t.find("#element-opacity").val(e.opacity),
                    t
                      .find("#element-opacity")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.opacity),
                    t.find("#element-skew-x").val(e.skewX),
                    t
                      .find("#element-skew-x")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewX),
                    t.find("#element-skew-y").val(e.skewX),
                    t
                      .find("#element-skew-y")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewY),
                    t.find("#element-rotate").val(parseInt(e.angle)),
                    t
                      .find("#element-rotate")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(parseInt(e.angle)),
                    null == e.shadow
                      ? t.find("#palleon-element-shadow").prop("checked", !1)
                      : (t.find("#palleon-element-shadow").prop("checked", !0),
                        t
                          .find("#element-shadow-color")
                          .spectrum("set", e.shadow.color),
                        t.find("#element-shadow-blur").val(e.shadow.blur),
                        t
                          .find("#element-shadow-offset-x")
                          .val(e.shadow.offsetX),
                        t
                          .find("#element-shadow-offset-y")
                          .val(e.shadow.offsetY));
                  t.find("#palleon-element-shadow").trigger("change");
                })(a),
                t.find("#palleon-btn-elements").hasClass("active") ||
                  t.find("#palleon-btn-elements").trigger("click"),
                t.find("#palleon-custom-element-open").trigger("click"))
              : (t.find("#palleon-custom-element-options").hide(),
                t.find("#palleon-custom-element-options-info").show()),
            C.includes(a.objectType)
              ? (j.includes(a.objectType)
                  ? t.find("#shape-custom-width-wrap").show()
                  : t.find("#shape-custom-width-wrap").hide(),
                t.find("#palleon-shape-settings").show(),
                (function (e) {
                  t.find("#shape-outline-width").val(e.strokeWidth),
                    "none" == e.gradientFill
                      ? (t.find("#palleon-shape-gradient").val("none"),
                        t.find("#palleon-shape-color").spectrum("set", e.fill))
                      : "vertical" == e.gradientFill
                      ? (t.find("#palleon-shape-gradient").val("vertical"),
                        4 == e.fill.colorStops.length
                          ? (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", e.fill.colorStops[3].color))
                          : 3 == e.fill.colorStops.length
                          ? (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", ""))
                          : 2 == e.fill.colorStops.length &&
                            (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", ""),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", "")))
                      : "horizontal" == e.gradientFill &&
                        (t.find("#palleon-shape-gradient").val("horizontal"),
                        4 == e.fill.colorStops.length
                          ? (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", e.fill.colorStops[3].color))
                          : 3 == e.fill.colorStops.length
                          ? (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", e.fill.colorStops[2].color),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", ""))
                          : 2 == e.fill.colorStops.length &&
                            (t
                              .find("#shape-gradient-color-1")
                              .spectrum("set", e.fill.colorStops[0].color),
                            t
                              .find("#shape-gradient-color-2")
                              .spectrum("set", e.fill.colorStops[1].color),
                            t
                              .find("#shape-gradient-color-3")
                              .spectrum("set", ""),
                            t
                              .find("#shape-gradient-color-4")
                              .spectrum("set", "")));
                  t.find("#palleon-shape-gradient").trigger("change"),
                    t.find("#shape-outline-color").spectrum("set", e.stroke),
                    null == e.shadow
                      ? t.find("#palleon-shape-shadow").prop("checked", !1)
                      : (t.find("#palleon-shape-shadow").prop("checked", !0),
                        t
                          .find("#shape-shadow-color")
                          .spectrum("set", e.shadow.color),
                        t.find("#shape-shadow-blur").val(e.shadow.blur),
                        t.find("#shape-shadow-offset-x").val(e.shadow.offsetX),
                        t.find("#shape-shadow-offset-y").val(e.shadow.offsetY));
                  t.find("#palleon-shape-shadow").trigger("change"),
                    t.find("#shape-opacity").val(e.opacity),
                    t
                      .find("#shape-opacity")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.opacity),
                    t.find("#shape-skew-x").val(e.skewX),
                    t
                      .find("#shape-skew-x")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewX),
                    t.find("#shape-skew-y").val(e.skewX),
                    t
                      .find("#shape-skew-y")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(e.skewY),
                    t.find("#shape-rotate").val(parseInt(e.angle)),
                    t
                      .find("#shape-rotate")
                      .parent()
                      .parent()
                      .find(".slider-label span")
                      .html(parseInt(e.angle)),
                    t.find("#shape-custom-width").val(""),
                    t.find("#shape-custom-height").val("");
                })(a),
                t.find("#palleon-btn-shapes").hasClass("active") ||
                  t.find("#palleon-btn-shapes").trigger("click"))
              : t.find("#palleon-shape-settings").hide(),
            a.id && t.find("#palleon-layers #" + a.id).addClass("active"))
          : e.each(a, function (e, a) {
              t.find("#palleon-layers #" + a.id).addClass("active");
            });
    }
    function L() {
      fabric.Image.fromURL(s, function (e) {
        u.setBackgroundImage(
          e,
          u.renderAll.bind(u),
          {
            objectType: "BG",
            mode: o,
            top: 0,
            left: 0,
            scaleX: f,
            scaleY: h,
            selectable: !1,
            angle: p,
            originX: g,
            originY: m,
            lockMovementX: !0,
            lockMovementY: !0,
            lockRotation: !0,
            erasable: !0,
          },
          { crossOrigin: "anonymous" }
        );
      });
    }
    function M(e) {
      var a = d,
        n = c;
      if (((0 != p && 180 != p && -180 != p) || ((a = c), (n = d)), e))
        (e /= 100), u.setZoom(e);
      else {
        var l = t.find("#palleon-img-zoom").val(),
          i = 1,
          o = 0;
        a < t.find("#palleon-content").width() &&
        n < t.find("#palleon-content").height()
          ? (u.setZoom(1), t.find("#palleon-img-zoom").val(100))
          : (a > t.find("#palleon-content").width() &&
              l >
                100 *
                  (i = (t.find("#palleon-content").width() - 60) / a).toFixed(
                    2
                  ) &&
              (u.setZoom(i.toFixed(2)),
              t.find("#palleon-img-zoom").val(100 * i.toFixed(2)),
              (o = i.toFixed(2))),
            n > t.find("#palleon-content").height() &&
              l >
                100 *
                  (i = t.find("#palleon-content").height() / n).toFixed(2) &&
              (0 === o || o > i.toFixed(2)) &&
              (u.setZoom(i.toFixed(2)),
              t.find("#palleon-img-zoom").val(100 * i.toFixed(2))));
      }
      u.setWidth(a * u.getZoom()),
        u.setHeight(n * u.getZoom()),
        !0 === u.isDrawingMode &&
          (t.find("#palleon-erase-btn").hasClass("active") &&
            t.find("#eraser-width").trigger("input"),
          t.find("#palleon-draw-btn").hasClass("active") &&
            t.find("#brush-width").trigger("input"));
    }
    Y(),
      t.find(".palleon-modal-open").on("click", function (a) {
        a.preventDefault();
        var n = e(this).data("target");
        t.find(".palleon-modal").hide(), t.find(n).show();
      }),
      t.find(".palleon-modal-close").on("click", function (a) {
        a.preventDefault();
        var n = e(this).data("target");
        t.find(n).hide();
      }),
      t.find("#palleon-image-upload").on("change", function () {
        t.find(".palleon-modal").hide(),
          t
            .find("#palleon-canvas-wrap, .palleon-content-bar")
            .css("visibility", "visible");
        var e = new FileReader();
        (e.onload = function (a) {
          t.find("#palleon-canvas-img").attr("src", e.result), X("image");
        }),
          e.readAsDataURL(this.files[0]),
          q(
            this.files[0].name.replace(/\.[^/.]+$/, ""),
            this.files[0].name.match(/\.[0-9a-z]+$/i)[0].replace(/\./g, "")
          );
      }),
      t.find("#palleon-canvas-create").on("click", function () {
        q(new Date().getTime(), ""), X("canvas");
      }),
      t.find("#palleon-template-search").on("click", function () {
        e(this);
        var a = t.find("#palleon-template-search-keyword").val(),
          n = t.find("#palleon-templates-menu").val(),
          l = {
            action: "templateSearch",
            nonce: palleonParams.nonce,
            keyword: a,
            category: n,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: l,
          type: "POST",
          success: function (e) {
            e &&
              (t.find("#palleon-templates-grid-pagination").remove(),
              t.find("#palleon-templates-grid").html(e),
              P.update(),
              S(t.find("#palleon-templates-grid")));
          },
          error: function (e, a, n) {
            e.status && 400 == e.status
              ? toastr.error(e.responseText, palleonParams.error)
              : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t
        .find(".template-grid")
        .on("click", ".template-favorite button.star", function () {
          var a = e(this),
            n = a.data("templateid"),
            l = "add";
          a.hasClass("favorited")
            ? (t
                .find('*[data-templateid="' + n + '"]')
                .removeClass("favorited"),
              (l = "remove"))
            : t.find('*[data-templateid="' + n + '"]').addClass("favorited");
          var i = {
            action: "favTemplate",
            nonce: palleonParams.nonce,
            templateid: n,
            mode: l,
          };
          e.ajax({
            url: palleonParams.ajaxurl,
            data: i,
            type: "POST",
            success: function (e) {
              "add" == l
                ? (toastr.success(
                    palleonParams.favorited,
                    palleonParams.success
                  ),
                  t
                    .find('*[data-templateid="' + n + '"]')
                    .html('<span class="material-icons">star</span>'))
                : (toastr.success(
                    palleonParams.unfavorited,
                    palleonParams.success
                  ),
                  t
                    .find('*[data-templateid="' + n + '"]')
                    .html('<span class="material-icons">star_border</span>')),
                e &&
                  (t
                    .find("#palleon-templates-favorites-grid-pagination")
                    .remove(),
                  t.find("#palleon-templates-favorites-grid").html(e),
                  P.update(),
                  S(t.find("#palleon-templates-favorites-grid")));
            },
            error: function (e, a, n) {
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
            },
          });
        }),
      t.find("#palleon-json-download").on("click", function () {
        var e = t.find("#palleon-json-download-name").val(),
          a = u.toJSON([
            "objectType",
            "gradientFill",
            "roundedCorders",
            "mode",
            "selectable",
            "lockMovementX",
            "lockMovementY",
            "lockRotation",
            "crossOrigin",
          ]);
        T(a.backgroundImage.src, function (n) {
          a.backgroundImage.src = n;
          var l = JSON.stringify(a),
            i = document.createElement("a"),
            o = new Blob([l], { type: "text/plain" });
          (i.href = URL.createObjectURL(o)),
            (i.download = e + ".json"),
            i.click(),
            t.find(".palleon-modal").hide();
        });
      }),
      t.find("#palleon-json-upload").on("change", function (e) {
        t
          .find("#palleon-canvas-wrap, .palleon-content-bar")
          .css("visibility", "visible"),
          t.find("#palleon-canvas-loader").css("display", "flex");
        var a = new FileReader();
        (a.onload = function (e) {
          z(JSON.parse(a.result)), t.find("#palleon-canvas-loader").hide();
        }),
          a.readAsText(e.target.files[0]),
          t.find(".palleon-modal").hide();
      }),
      t
        .find(".template-selection")
        .on("click", ".palleon-select-template", function () {
          t
            .find("#palleon-canvas-wrap, .palleon-content-bar")
            .css("visibility", "visible"),
            t.find(".palleon-modal").hide(),
            t.find("#palleon-canvas-loader").css("display", "flex"),
            u
              .getObjects()
              .filter((e) => "BG" != e.objectType)
              .forEach((e) => u.remove(e)),
            t.find("#palleon-layers li").remove(),
            B(),
            e
              .getJSON(e(this).data("json"), function (e) {
                z(e);
              })
              .fail(function (e, a, n) {
                toastr.error("Request Failed: " + n, palleonParams.error);
              })
              .always(function () {
                t.find("#palleon-canvas-loader").hide();
              });
        }),
      t
        .find(".palleon-template-list")
        .on("click", ".palleon-template-delete", function () {
          if (
            window.confirm(
              "Are you sure you want to delete the template permanently?"
            )
          ) {
            var a = e(this).data("target"),
              n = new FormData();
            n.append("target", a),
              n.append("action", "deleteJsonFromLibrary"),
              n.append("nonce", palleonParams.nonce),
              e.ajax({
                url: palleonParams.ajaxurl,
                type: "POST",
                contentType: !1,
                processData: !1,
                cache: !1,
                data: n,
                success: function (e) {
                  t.find("#palleon-my-templates-refresh").trigger("click"),
                    toastr.success(
                      palleonParams.deleted,
                      palleonParams.success
                    );
                },
                error: function (e, a, n) {
                  e.status && 400 == e.status
                    ? toastr.error(e.responseText, palleonParams.error)
                    : toastr.error(palleonParams.wrong, palleonParams.error);
                },
              });
          }
        }),
      t.find("#palleon-my-templates-refresh").on("click", function () {
        var a = e(this),
          n = {
            action: "loadmytemplates",
            nonce: palleonParams.nonce,
            query: templatesMyRefresh.posts,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: n,
          type: "POST",
          beforeSend: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.loading
            );
          },
          success: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e &&
                (t.find("#palleon-my-templates-pagination").remove(),
                t.find("#palleon-my-templates").html(e),
                P.update(),
                S(t.find("#palleon-my-templates")));
          },
          error: function (e, n, t) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t.find("#palleon-my-templates-search").on("click", function () {
        var a = e(this).parent().find("input");
        if (
          (t.find("#palleon-my-templates-noimg").addClass("d-none"),
          "" != a.val())
        )
          if (e(this).hasClass("cancel"))
            e(this).removeClass("cancel"),
              e(this).find(".material-icons").html("search"),
              e(this).removeClass("danger"),
              e(this).addClass("primary"),
              a.val(""),
              t.find("#palleon-my-templates li").show(),
              t.find("#palleon-my-templates-pagination").length &&
                (t
                  .find("#palleon-my-templates-pagination")
                  .pagination("redraw"),
                t
                  .find("#palleon-my-templates-pagination")
                  .pagination("selectPage", 1)),
              a.prop("disabled", !1);
          else {
            e(this).addClass("cancel"),
              e(this).find(".material-icons").html("close"),
              e(this).removeClass("primary"),
              e(this).addClass("danger");
            var n = a.val().toLowerCase().replace(/\s/g, "");
            "" == n || n.length < 1
              ? (t.find("#palleon-my-templates li").show(),
                t.find("#palleon-my-templates-pagination").length &&
                  (t
                    .find("#palleon-my-templates-pagination")
                    .pagination("redraw"),
                  t
                    .find("#palleon-my-templates-pagination")
                    .pagination("selectPage", 1)))
              : (t.find("#palleon-my-templates-pagination").length &&
                  t
                    .find("#palleon-my-templates-pagination")
                    .pagination("destroy"),
                t
                  .find("#palleon-my-templates li")
                  .hide()
                  .filter('[data-keyword*="' + n + '"]')
                  .show(),
                0 === t.find("#palleon-my-templates li:visible").length &&
                  t.find("#palleon-my-templates-noimg").removeClass("d-none")),
              a.prop("disabled", !0);
          }
      }),
      t.find("#palleon-download").on("click", function () {
        var e = t.find("#palleon-download-name").val(),
          a = parseFloat(t.find("#palleon-download-quality").val()),
          n = t.find("#palleon-download-format").val(),
          l = document.createElement("a");
        u.setZoom(1), t.find("#palleon-img-zoom").val(100);
        var i = d,
          o = c;
        (0 != p && 180 != p && -180 != p) || ((i = c), (o = d)),
          u.setWidth(i),
          u.setHeight(o);
        var r = O(
            u.toDataURL({ format: n, quality: a, enableRetinaScaling: !1 })
          ),
          s = URL.createObjectURL(r);
        (l.download = e + "." + n),
          (l.href = s),
          l.click(),
          M(),
          u.requestRenderAll(),
          t.find(".palleon-modal").hide();
      }),
      t.find("#palleon-download-format").on("change", function () {
        "png" == e(this).val()
          ? t.find("#palleon-download-quality").prop("disabled", !0)
          : t.find("#palleon-download-quality").prop("disabled", !1);
      }),
      t.find("#palleon-save-img-format").on("change", function () {
        "png" == e(this).val()
          ? t.find("#palleon-save-img-quality").prop("disabled", !0)
          : t.find("#palleon-save-img-quality").prop("disabled", !1);
      }),
      t.find("#palleon-save-img").on("click", function () {
        var a = new Date().getTime(),
          n = t.find("#palleon-save-img-name").val(),
          l = parseFloat(t.find("#palleon-save-img-quality").val()),
          i = t.find("#palleon-save-img-format").val(),
          o = t.find("#palleon-canvas-img").data("id");
        u.setZoom(1), t.find("#palleon-img-zoom").val(100);
        var r = d,
          s = c;
        (0 != p && 180 != p && -180 != p) || ((r = c), (s = d)),
          u.setWidth(r),
          u.setHeight(s);
        var f = u.toDataURL({ format: i, quality: l, enableRetinaScaling: !1 }),
          h = O(f);
        M(), u.requestRenderAll();
        var g = new FormData();
        g.append("id", o),
          g.append("name", n),
          g.append("filename", a),
          g.append("format", i),
          g.append("type", h.type),
          g.append("url", f),
          g.append("action", "saveImage"),
          g.append("nonce", palleonParams.nonce),
          e.ajax({
            url: palleonParams.ajaxurl,
            type: "POST",
            contentType: !1,
            processData: !1,
            cache: !1,
            data: g,
            success: function () {
              toastr.success(palleonParams.imgsaved, palleonParams.success),
                t.find(".palleon-modal").hide();
            },
            error: function (e, a, n) {
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
            },
          });
      }),
      t.find("#palleon-json-save").on("click", function () {
        var a = new Date().getTime(),
          n = t.find("#palleon-json-save-name").val(),
          l = u.toJSON([
            "objectType",
            "gradientFill",
            "roundedCorders",
            "mode",
            "selectable",
            "lockMovementX",
            "lockMovementY",
            "lockRotation",
            "crossOrigin",
          ]);
        T(l.backgroundImage.src, function (i) {
          l.backgroundImage.src = i;
          var o = JSON.stringify(l),
            r = new FormData();
          r.append("name", n),
            r.append("filename", a),
            r.append("json", o),
            r.append("action", "saveJson"),
            r.append("nonce", palleonParams.nonce),
            e.ajax({
              url: palleonParams.ajaxurl,
              type: "POST",
              contentType: !1,
              processData: !1,
              cache: !1,
              data: r,
              success: function () {
                t.find("#palleon-my-templates-refresh").trigger("click"),
                  toastr.success(
                    palleonParams.tempsaved,
                    palleonParams.success
                  ),
                  t.find(".palleon-modal").hide();
              },
              error: function (e, a, n) {
                e.status && 400 == e.status
                  ? toastr.error(e.responseText, palleonParams.error)
                  : toastr.error(palleonParams.wrong, palleonParams.error);
              },
            });
        });
      }),
      t.find("#palleon-canvas-size-select").on("change", function () {
        var a = e(this).val();
        "custom" == a
          ? (t.find("#palleon-canvas-width").prop("disabled", !1),
            t.find("#palleon-canvas-height").prop("disabled", !1))
          : (t.find("#palleon-canvas-width").prop("disabled", !0),
            t.find("#palleon-canvas-height").prop("disabled", !0)),
          "blog-banner" == a
            ? (t.find("#palleon-canvas-width").val(2240),
              t.find("#palleon-canvas-height").val(1260))
            : "fb-cover" == a
            ? (t.find("#palleon-canvas-width").val(851),
              t.find("#palleon-canvas-height").val(315))
            : "fb-ad" == a
            ? (t.find("#palleon-canvas-width").val(1200),
              t.find("#palleon-canvas-height").val(628))
            : "instagram" == a
            ? (t.find("#palleon-canvas-width").val(1080),
              t.find("#palleon-canvas-height").val(1080))
            : "pinterest" == a
            ? (t.find("#palleon-canvas-width").val(750),
              t.find("#palleon-canvas-height").val(1120))
            : "fb-post" == a
            ? (t.find("#palleon-canvas-width").val(940),
              t.find("#palleon-canvas-height").val(788))
            : "twitter-post" == a
            ? (t.find("#palleon-canvas-width").val(1600),
              t.find("#palleon-canvas-height").val(900))
            : "youtube" == a
            ? (t.find("#palleon-canvas-width").val(1280),
              t.find("#palleon-canvas-height").val(720))
            : "wallpaper" == a &&
              (t.find("#palleon-canvas-width").val(1920),
              t.find("#palleon-canvas-height").val(1080));
      }),
      t.find("#palleon-canvas-color").on("change", function () {
        var a = e(this).val();
        t.find("#custom-image-background").spectrum("set", a),
          "" == a
            ? ((u.backgroundColor = "transparent"), u.requestRenderAll())
            : ((u.backgroundColor = a), u.requestRenderAll());
      }),
      t.find("#palleon-media-library").on("click", function () {
        x = "add-to-canvas";
      }),
      t.find("#palleon-img-media-library").on("click", function () {
        x = "add-as-object";
      }),
      t.find("#palleon-img-replace-media-library").on("click", function () {
        x = "replace-image";
      }),
      t
        .find("#modal-media-library")
        .on(
          "click",
          ".media-library-grid>.palleon-masonry-item>.palleon-masonry-item-inner",
          function () {
            var a = e(this).find("img").data("full");
            if ("add-to-canvas" == x) {
              t.find("#palleon-canvas-img").attr("src", a);
              var n = a.substring(0, a.indexOf("?"));
              "" != n && (a = n),
                q(
                  e(this).find("img").data("filename"),
                  a.match(/\.[0-9a-z]+$/i)[0].replace(/\./g, "")
                ),
                setTimeout(function () {
                  X("image");
                }, 100);
            } else if ("add-as-object" == x) {
              t.find("#palleon-canvas-loader").css("display", "flex");
              var l = new Image();
              T(a, function (e) {
                (l.src = e),
                  (l.onload = function () {
                    var e = new fabric.Image(l, {
                      objectType: "image",
                      roundedCorders: 0,
                      stroke: "#fff",
                      strokeWidth: 0,
                      top: H()[1] / 2,
                      left: H()[0] / 2,
                      originX: "center",
                      originY: "center",
                    });
                    u.add(e),
                      e.scaleToWidth(H()[0] / 2),
                      e.isPartiallyOnScreen() && e.scaleToHeight(H()[1] / 2),
                      u.setActiveObject(e),
                      u.requestRenderAll(),
                      t.find("#palleon-canvas-loader").hide();
                  });
              });
            } else if ("replace-image" == x) {
              t.find("#palleon-canvas-loader").css("display", "flex");
              l = new Image();
              T(a, function (e) {
                (l.src = e),
                  (l.onload = function () {
                    u.getActiveObject().setSrc(e),
                      u.requestRenderAll(),
                      t.find("#palleon-canvas-loader").hide();
                  });
              });
            }
            t.find("#modal-media-library").hide();
          }
        ),
      t.find("#palleon-library-my-search").on("click", function () {
        var a = e(this).parent().find("input");
        if (
          (t.find("#palleon-library-my-noimg").addClass("d-none"),
          "" != a.val())
        )
          if (e(this).hasClass("cancel"))
            e(this).removeClass("cancel"),
              e(this).find(".material-icons").html("search"),
              e(this).removeClass("danger"),
              e(this).addClass("primary"),
              a.val(""),
              t.find("#palleon-library-my .palleon-masonry-item").show(),
              t.find("#palleon-library-my-pagination").length &&
                (t.find("#palleon-library-my-pagination").pagination("redraw"),
                t
                  .find("#palleon-library-my-pagination")
                  .pagination("selectPage", 1)),
              a.prop("disabled", !1);
          else {
            e(this).addClass("cancel"),
              e(this).find(".material-icons").html("close"),
              e(this).removeClass("primary"),
              e(this).addClass("danger");
            var n = a.val().toLowerCase().replace(/\s/g, "");
            "" == n || n.length < 1
              ? (t.find("#palleon-library-my .palleon-masonry-item").show(),
                t.find("#palleon-library-my-pagination").length &&
                  (t
                    .find("#palleon-library-my-pagination")
                    .pagination("redraw"),
                  t
                    .find("#palleon-library-my-pagination")
                    .pagination("selectPage", 1)))
              : (t.find("#palleon-library-my-pagination").length &&
                  t
                    .find("#palleon-library-my-pagination")
                    .pagination("destroy"),
                t
                  .find("#palleon-library-my .palleon-masonry-item")
                  .hide()
                  .filter('[data-keyword*="' + n + '"]')
                  .show(),
                0 ===
                  t.find("#palleon-library-my .palleon-masonry-item:visible")
                    .length &&
                  t.find("#palleon-library-my-noimg").removeClass("d-none")),
              a.prop("disabled", !0);
          }
      }),
      t.find("#palleon-library-all-search").on("click", function () {
        var a = e(this).parent().find("input");
        if (
          (t.find("#palleon-library-all-noimg").addClass("d-none"),
          "" != a.val())
        )
          if (e(this).hasClass("cancel"))
            e(this).removeClass("cancel"),
              e(this).find(".material-icons").html("search"),
              e(this).removeClass("danger"),
              e(this).addClass("primary"),
              a.val(""),
              t.find("#palleon-library-all .palleon-masonry-item").show(),
              t.find("#palleon-library-all-pagination").length &&
                (t.find("#palleon-library-all-pagination").pagination("redraw"),
                t
                  .find("#palleon-library-all-pagination")
                  .pagination("selectPage", 1)),
              a.prop("disabled", !1);
          else {
            e(this).addClass("cancel"),
              e(this).find(".material-icons").html("close"),
              e(this).removeClass("primary"),
              e(this).addClass("danger");
            var n = a.val().toLowerCase().replace(/\s/g, "");
            "" == n || n.length < 1
              ? (t.find("#palleon-library-all .palleon-masonry-item").show(),
                t.find("#palleon-library-all-pagination").length &&
                  (t
                    .find("#palleon-library-all-pagination")
                    .pagination("redraw"),
                  t
                    .find("#palleon-library-all-pagination")
                    .pagination("selectPage", 1)))
              : (t.find("#palleon-library-all-pagination").length &&
                  t
                    .find("#palleon-library-all-pagination")
                    .pagination("destroy"),
                t
                  .find("#palleon-library-all .palleon-masonry-item")
                  .hide()
                  .filter('[data-keyword*="' + n + '"]')
                  .show(),
                0 ===
                  t.find("#palleon-library-all .palleon-masonry-item:visible")
                    .length &&
                  t.find("#palleon-library-all-noimg").removeClass("d-none")),
              a.prop("disabled", !0);
          }
      }),
      t.find("#palleon-library-my-refresh").on("click", function () {
        var a = e(this),
          n = {
            action: "loadmyimgs",
            nonce: palleonParams.nonce,
            query: libraryMyRefresh.posts,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: n,
          type: "POST",
          beforeSend: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.loading
            );
          },
          success: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e &&
                (t.find("#palleon-library-my-pagination").remove(),
                t.find("#palleon-library-my").html(e),
                P.update(),
                S(t.find("#palleon-library-my")));
          },
          error: function (e, n, t) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t.find("#palleon-library-all-refresh").on("click", function () {
        var a = e(this),
          n = {
            action: "loadallimgs",
            nonce: palleonParams.nonce,
            query: libraryAllRefresh.posts,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: n,
          type: "POST",
          beforeSend: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.loading
            );
          },
          success: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e &&
                (t.find("#palleon-library-all-pagination").remove(),
                t.find("#palleon-library-all").html(e),
                P.update(),
                S(t.find("#palleon-library-all")));
          },
          error: function (e, n, t) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t.find("#palleon-library-upload-img").on("change", function (a) {
        var n = this.files[0],
          l = new FormData();
        l.append("file", n),
          l.append("action", "uploadImgToLibrary"),
          l.append("nonce", palleonParams.nonce),
          e
            .ajax({
              url: palleonParams.ajaxurl,
              type: "POST",
              contentType: !1,
              processData: !1,
              cache: !1,
              data: l,
              success: function (e) {
                t.find("#palleon-library-my-refresh").trigger("click");
              },
              error: function (e, a, n) {
                e.status && 400 == e.status
                  ? toastr.error(e.responseText, palleonParams.error)
                  : toastr.error(palleonParams.wrong, palleonParams.error);
              },
            })
            .done(function (e) {
              !1 === e.success
                ? toastr.error(e.data, palleonParams.error)
                : toastr.success(palleonParams.uploaded, palleonParams.success);
            });
      }),
      t
        .find(".media-library-grid")
        .on("click", ".palleon-library-delete", function () {
          if (
            window.confirm(
              "Are you sure you want to delete the image permanently?"
            )
          ) {
            var a = e(this).data("target"),
              n = new FormData();
            n.append("target", a),
              n.append("action", "deleteImgFromLibrary"),
              n.append("nonce", palleonParams.nonce),
              e.ajax({
                url: palleonParams.ajaxurl,
                type: "POST",
                contentType: !1,
                processData: !1,
                cache: !1,
                data: n,
                success: function (e) {
                  t.find("#palleon-library-my-refresh").trigger("click"),
                    toastr.success(
                      palleonParams.deleted,
                      palleonParams.success
                    );
                },
                error: function (e, a, n) {
                  e.status && 400 == e.status
                    ? toastr.error(e.responseText, palleonParams.error)
                    : toastr.error(palleonParams.wrong, palleonParams.error);
                },
              });
          }
        }),
      t
        .find(".svg-library-grid")
        .on(
          "click",
          ">.palleon-masonry-item>.palleon-masonry-item-inner",
          function () {
            var a = e(this).find("img").data("full");
            fabric.loadSVGFromURL(
              a,
              function (e, a) {
                var n = fabric.util.groupSVGElements(e, a);
                n.set("originX", "center"),
                  n.set("originY", "center"),
                  n.set("left", H()[0] / 2),
                  n.set("top", H()[1] / 2),
                  n.set("objectType", "customSVG"),
                  n.scaleToWidth(H()[0] / 2),
                  n.scaleToHeight(H()[1] / 2),
                  u.add(n),
                  u.setActiveObject(n),
                  u.requestRenderAll();
              },
              function () {},
              { crossOrigin: "anonymous" }
            ),
              t.find("#modal-svg-library").hide();
          }
        ),
      t.find("#palleon-svg-library-my-search").on("click", function () {
        var a = e(this).parent().find("input");
        if (
          (t.find("#palleon-svg-library-my-noimg").addClass("d-none"),
          "" != a.val())
        )
          if (e(this).hasClass("cancel"))
            e(this).removeClass("cancel"),
              e(this).find(".material-icons").html("search"),
              e(this).removeClass("danger"),
              e(this).addClass("primary"),
              a.val(""),
              t.find("#palleon-svg-library-my .palleon-masonry-item").show(),
              t.find("#palleon-svg-library-my-pagination").length &&
                (t
                  .find("#palleon-svg-library-my-pagination")
                  .pagination("redraw"),
                t
                  .find("#palleon-svg-library-my-pagination")
                  .pagination("selectPage", 1)),
              a.prop("disabled", !1);
          else {
            e(this).addClass("cancel"),
              e(this).find(".material-icons").html("close"),
              e(this).removeClass("primary"),
              e(this).addClass("danger");
            var n = a.val().toLowerCase().replace(/\s/g, "");
            "" == n || n.length < 1
              ? (t.find("#palleon-svg-library-my .palleon-masonry-item").show(),
                t.find("#palleon-svg-library-my-pagination").length &&
                  (t
                    .find("#palleon-svg-library-my-pagination")
                    .pagination("redraw"),
                  t
                    .find("#palleon-svg-library-my-pagination")
                    .pagination("selectPage", 1)))
              : (t.find("#palleon-svg-library-my-pagination").length &&
                  t
                    .find("#palleon-svg-library-my-pagination")
                    .pagination("destroy"),
                t
                  .find("#palleon-svg-library-my .palleon-masonry-item")
                  .hide()
                  .filter('[data-keyword*="' + n + '"]')
                  .show(),
                0 ===
                  t.find(
                    "#palleon-svg-library-my .palleon-masonry-item:visible"
                  ).length &&
                  t
                    .find("#palleon-svg-library-my-noimg")
                    .removeClass("d-none")),
              a.prop("disabled", !0);
          }
      }),
      t.find("#palleon-svg-library-all-search").on("click", function () {
        var a = e(this).parent().find("input");
        if (
          (t.find("#palleon-library-all-noimg").addClass("d-none"),
          "" != a.val())
        )
          if (e(this).hasClass("cancel"))
            e(this).removeClass("cancel"),
              e(this).find(".material-icons").html("search"),
              e(this).removeClass("danger"),
              e(this).addClass("primary"),
              a.val(""),
              t.find("#palleon-svg-library-all .palleon-masonry-item").show(),
              t.find("#palleon-svg-library-all-pagination").length &&
                (t
                  .find("#palleon-svg-library-all-pagination")
                  .pagination("redraw"),
                t
                  .find("#palleon-svg-library-all-pagination")
                  .pagination("selectPage", 1)),
              a.prop("disabled", !1);
          else {
            e(this).addClass("cancel"),
              e(this).find(".material-icons").html("close"),
              e(this).removeClass("primary"),
              e(this).addClass("danger");
            var n = a.val().toLowerCase().replace(/\s/g, "");
            "" == n || n.length < 1
              ? (t
                  .find("#palleon-svg-library-all .palleon-masonry-item")
                  .show(),
                t.find("#palleon-svg-library-all-pagination").length &&
                  (t
                    .find("#palleon-svg-library-all-pagination")
                    .pagination("redraw"),
                  t
                    .find("#palleon-svg-library-all-pagination")
                    .pagination("selectPage", 1)))
              : (t.find("#palleon-svg-library-all-pagination").length &&
                  t
                    .find("#palleon-svg-library-all-pagination")
                    .pagination("destroy"),
                t
                  .find("#palleon-svg-library-all .palleon-masonry-item")
                  .hide()
                  .filter('[data-keyword*="' + n + '"]')
                  .show(),
                0 ===
                  t.find(
                    "#palleon-svg-library-all .palleon-masonry-item:visible"
                  ).length &&
                  t
                    .find("#palleon-svg-library-all-noimg")
                    .removeClass("d-none")),
              a.prop("disabled", !0);
          }
      }),
      t.find("#palleon-svg-library-my-refresh").on("click", function () {
        var a = e(this),
          n = {
            action: "loadmyimgs",
            nonce: palleonParams.nonce,
            query: SVGlibraryMyRefresh.posts,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: n,
          type: "POST",
          beforeSend: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.loading
            );
          },
          success: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e &&
                (t.find("#palleon-svg-library-my-pagination").remove(),
                t.find("#palleon-svg-library-my").html(e),
                P.update(),
                S(t.find("#palleon-svg-library-my")));
          },
          error: function (e, n, t) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t.find("#palleon-svg-library-all-refresh").on("click", function () {
        var a = e(this),
          n = {
            action: "loadallimgs",
            nonce: palleonParams.nonce,
            query: SVGlibraryAllRefresh.posts,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: n,
          type: "POST",
          beforeSend: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.loading
            );
          },
          success: function (e) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e &&
                (t.find("#palleon-svg-library-all-pagination").remove(),
                t.find("#palleon-svg-library-all").html(e),
                P.update(),
                S(t.find("#palleon-svg-library-all")));
          },
          error: function (e, n, t) {
            a.html(
              '<span class="material-icons">refresh</span>' +
                palleonParams.refresh
            ),
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      t.find("#palleon-svg-library-upload-img").on("change", function (a) {
        var n = this.files[0],
          l = new FormData();
        l.append("file", n),
          l.append("action", "uploadSVGToLibrary"),
          l.append("nonce", palleonParams.nonce),
          e
            .ajax({
              url: palleonParams.ajaxurl,
              type: "POST",
              contentType: !1,
              processData: !1,
              cache: !1,
              data: l,
              success: function (e) {
                t.find("#palleon-svg-library-my-refresh").trigger("click");
              },
              error: function (e, a, n) {
                e.status && 400 == e.status
                  ? toastr.error(e.responseText, palleonParams.error)
                  : toastr.error(palleonParams.wrong, palleonParams.error);
              },
            })
            .done(function (e) {
              !1 === e.success
                ? toastr.error(e.data, palleonParams.error)
                : toastr.success(palleonParams.uploaded, palleonParams.success);
            });
      }),
      t
        .find(".svg-library-grid")
        .on("click", ".palleon-svg-library-delete", function () {
          if (
            window.confirm(
              "Are you sure you want to delete the image permanently?"
            )
          ) {
            var a = e(this).data("target"),
              n = new FormData();
            n.append("target", a),
              n.append("action", "deleteImgFromLibrary"),
              n.append("nonce", palleonParams.nonce),
              e.ajax({
                url: palleonParams.ajaxurl,
                type: "POST",
                contentType: !1,
                processData: !1,
                cache: !1,
                data: n,
                success: function (e) {
                  t.find("#palleon-svg-library-my-refresh").trigger("click"),
                    toastr.success(
                      palleonParams.deleted,
                      palleonParams.success
                    );
                },
                error: function (e, a, n) {
                  e.status && 400 == e.status
                    ? toastr.error(e.responseText, palleonParams.error)
                    : toastr.error(palleonParams.wrong, palleonParams.error);
                },
              });
          }
        }),
      t.find("#palleon-pexels-search").on("click", function () {
        var a = t.find("#pexels-orientation").val(),
          n = t.find("#pexels-color").val(),
          l = t.find("#palleon-pexels-keyword").val(),
          i = {
            action: "pexelsSearch",
            nonce: palleonParams.nonce,
            orientation: a,
            color: n,
            keyword: l,
            page: "1",
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: i,
          type: "POST",
          beforeSend: function (e) {
            t.find("#pexels").css("pointer-events", "none"),
              t.find("#pexels-menu,#pexels-output").css("opacity", 0.5);
          },
          success: function (e) {
            e
              ? (t.find("#pexels-output").html(e), P.update())
              : t.find("#pexels-output").html(e);
          },
          error: function (e, a, n) {
            e.status && 400 == e.status
              ? toastr.error(e.responseText, palleonParams.error)
              : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        }).done(function (e) {
          t.find("#pexels").css("pointer-events", "auto"),
            t.find("#pexels-menu,#pexels-output").css("opacity", 1);
        });
      }),
      t.find("#palleon-pexels-keyword").on("keyup input", function () {
        "" == e(this).val()
          ? (t.find("#pexels-orientation").val(""),
            t.find("#pexels-color").val(""),
            t.find("#pexels-orientation").prop("disabled", !0),
            t.find("#pexels-color").prop("disabled", !0))
          : (t.find("#pexels-orientation").prop("disabled", !1),
            t.find("#pexels-color").prop("disabled", !1));
      }),
      t.find("#pexels-output").on("click", "#pexels-loadmore", function () {
        var a = t.find("#pexels-orientation").val(),
          n = t.find("#pexels-color").val(),
          l = t.find("#palleon-pexels-keyword").val(),
          i = {
            action: "pexelsSearch",
            nonce: palleonParams.nonce,
            orientation: a,
            color: n,
            keyword: l,
            page: parseInt(e(this).data("page")) + 1,
          };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: i,
          type: "POST",
          beforeSend: function (e) {
            t.find("#pexels").css("pointer-events", "none"),
              t.find("#pexels-menu,#pexels-output").css("opacity", 0.5),
              t.find("#pexels-loadmore").html(palleonParams.loading);
          },
          success: function (e) {
            e
              ? (t.find("#pexels-loadmore").remove(),
                t.find("#pexels-output > .pexels-grid:last-child").after(e),
                P.update())
              : t.find("#pexels-loadmore").prop("disabled", !1);
          },
          error: function (e, a, n) {
            e.status && 400 == e.status
              ? toastr.error(e.responseText, palleonParams.error)
              : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        }).done(function (e) {
          t.find("#pexels").css("pointer-events", "auto"),
            t.find("#pexels-menu,#pexels-output").css("opacity", 1),
            t.find("#pexels-loadmore").html(palleonParams.loadmore);
        });
      }),
      u.on("object:moving", function (e) {
        var a = d,
          n = c;
        (0 != p && 180 != p && -180 != p) || ((a = c), (n = d));
        var t = e.target,
          l = t.getScaledWidth(),
          i = t.getScaledHeight();
        t.isPartiallyOnScreen() &&
          "clipPath" == t.objectType &&
          (t.top < 0 && t.left < 0
            ? ((t.top = 0),
              (t.left = 0),
              (t.lockMovementX = !0),
              (t.lockMovementY = !0))
            : t.top < 0 && l + t.left > a
            ? ((t.top = 0),
              (t.left = a - l),
              (t.lockMovementX = !0),
              (t.lockMovementY = !0))
            : i + t.top > n && t.left < 0
            ? ((t.top = n - i),
              (t.left = 0),
              (t.lockMovementX = !0),
              (t.lockMovementY = !0))
            : i + t.top > n && l + t.left > a
            ? ((t.top = n - i),
              (t.left = a - l),
              (t.lockMovementX = !0),
              (t.lockMovementY = !0))
            : t.top < 0
            ? ((t.top = 0), (t.lockMovementY = !0))
            : t.left < 0
            ? ((t.left = 0), (t.lockMovementX = !0))
            : l + t.left > a
            ? ((t.left = a - l), (t.lockMovementX = !0))
            : i + t.top > n && ((t.top = n - i), (t.lockMovementY = !0)),
          t.setCoords());
      }),
      u.on("object:scaling", function (e) {
        var a = d,
          n = c;
        (0 != p && 180 != p && -180 != p) || ((a = c), (n = d));
        var t = e.target,
          l = t.getScaledWidth(),
          i = t.getScaledHeight();
        t.isPartiallyOnScreen() &&
          "clipPath" == t.objectType &&
          (l >= a && (t.set({ scaleX: a / t.width }), (t.lockScalingX = !0)),
          i >= n && (t.set({ scaleY: n / t.height }), (t.lockScalingY = !0)),
          t.top < 0 &&
            ((t.top = 0),
            (t.lockScalingX = !0),
            (t.lockScalingY = !0),
            t.setCoords()),
          t.left < 0 &&
            ((t.left = 0),
            (t.lockScalingX = !0),
            (t.lockScalingY = !0),
            t.setCoords()),
          l + t.left > a &&
            ((t.left = a - l),
            (t.lockScalingX = !0),
            (t.lockScalingY = !0),
            t.setCoords()),
          i + t.top > n &&
            ((t.top = n - i),
            (t.lockScalingX = !0),
            (t.lockScalingY = !0),
            t.setCoords()));
      }),
      u.on("object:added", function (a) {
        var n,
          l,
          i = a.target;
        if ("clipPath" != i.objectType && "drawing" != i.objectType)
          if (!0 === u.isDrawingMode)
            i.set("objectType", "drawing"),
              i.set("selectable", !1),
              i.set("lockMovementX", !0),
              i.set("lockMovementY", !0),
              i.set("lockRotation", !0);
          else {
            var o,
              r = u.getObjects().indexOf(i),
              s = "Object",
              c = "category",
              d = "layer-visible",
              p = "visibility",
              f = "layer-unlocked",
              h = "lock_open";
            0 == i.visible && ((d = "layer-hidden"), (p = "visibility_off")),
              0 == i.selectable && ((f = "layer-locked"), (h = "lock")),
              i.set("id", new Date().getTime()),
              t.find("#palleon-layers > li").removeClass("active"),
              "textbox" == i.objectType
                ? ((s = i.text), (c = "title"))
                : "drawing" == i.objectType
                ? ((s = palleonParams.freeDrawing), (c = "brush"))
                : "frame" == i.objectType
                ? ((s = palleonParams.frame), (c = "wallpaper"))
                : "image" == i.objectType
                ? ((s = palleonParams.image), (c = "image"))
                : "circle" == i.objectType
                ? (s = palleonParams.circle)
                : "square" == i.objectType
                ? (s = palleonParams.square)
                : "rectangle" == i.objectType
                ? (s = palleonParams.rectangle)
                : "triangle" == i.objectType
                ? (s = palleonParams.triangle)
                : "ellipse" == i.objectType
                ? (s = palleonParams.ellipse)
                : "trapezoid" == i.objectType
                ? (s = palleonParams.trapezoid)
                : "emerald" == i.objectType
                ? (s = palleonParams.emerald)
                : "star" == i.objectType
                ? (s = palleonParams.star)
                : "element" == i.objectType
                ? ((s = palleonParams.element), (c = "star"))
                : "customSVG" == i.objectType && (s = palleonParams.customSvg),
              (o =
                '<li id="' +
                i.id +
                '" class="layer-' +
                i.objectType +
                ' active" data-sort="' +
                r +
                '"><span class="material-icons">' +
                c +
                '</span><div class="layer-name">' +
                s +
                '</div><span class="material-icons layer-settings">settings</span><div class="layer-icons"><a class="material-icons lock-layer ' +
                f +
                '" title="' +
                palleonParams.lockunlock +
                '">' +
                h +
                '</a><a class="material-icons text-success duplicate-layer" title="' +
                palleonParams.duplicate +
                '">content_copy</a><a class="material-icons layer-visibility ' +
                d +
                '" title="' +
                palleonParams.showhide +
                '">' +
                p +
                '</a><a class="material-icons text-danger delete-layer" title="' +
                palleonParams.delete +
                '">clear</a></div></li>'),
              t.find("#palleon-layers").prepend(o),
              (n = i.id),
              (l = t.find("#palleon-layers #" + n))
                .find("a.delete-layer")
                .on("click", function (e) {
                  e.preventDefault();
                  var a = u.getObjects();
                  a.filter((e) => e.id == n).forEach((e) => u.remove(e)),
                    l.remove(),
                    u.requestRenderAll(),
                    t.find("#palleon-layers").sortable("refresh"),
                    B();
                }),
              (function (e) {
                t.find("#palleon-layers #" + e)
                  .find("a.duplicate-layer")
                  .on("click", function (a) {
                    a.preventDefault();
                    var n = u.getObjects();
                    n
                      .filter((a) => a.id == e)
                      .forEach((e) =>
                        e.clone(function (a) {
                          a.set("id", new Date().getTime()),
                            a.set("objectType", e.objectType),
                            u.add(a),
                            u.setActiveObject(a);
                        })
                      ),
                      u.requestRenderAll(),
                      t.find("#palleon-layers").sortable("refresh");
                  });
              })(i.id),
              (function (a) {
                t.find("#palleon-layers #" + a)
                  .find("a.layer-visibility")
                  .on("click", function (n) {
                    n.preventDefault();
                    var t = u.getObjects();
                    e(this).hasClass("layer-visible")
                      ? (e(this).removeClass("layer-visible"),
                        e(this).addClass("layer-hidden"),
                        e(this).html("visibility_off"),
                        t
                          .filter((e) => e.id == a)
                          .forEach((e) => e.set("visible", !1)))
                      : e(this).hasClass("layer-hidden") &&
                        (e(this).removeClass("layer-hidden"),
                        e(this).addClass("layer-visible"),
                        e(this).html("visibility"),
                        t
                          .filter((e) => e.id == a)
                          .forEach((e) => e.set("visible", !0))),
                      u.requestRenderAll();
                  });
              })(i.id),
              (function (a) {
                t.find("#palleon-layers #" + a)
                  .find("a.lock-layer")
                  .on("click", function (a) {
                    a.preventDefault();
                    var n = u.getActiveObject();
                    e(this).hasClass("layer-unlocked")
                      ? (e(this).removeClass("layer-unlocked"),
                        e(this).addClass("layer-locked"),
                        e(this).html("lock"),
                        n.set({
                          lockMovementX: !0,
                          lockMovementY: !0,
                          lockRotation: !0,
                          selectable: !1,
                        }))
                      : e(this).hasClass("layer-locked") &&
                        (e(this).removeClass("layer-locked"),
                        e(this).addClass("layer-unlocked"),
                        e(this).html("lock_open"),
                        n.set({
                          lockMovementX: !1,
                          lockMovementY: !1,
                          lockRotation: !1,
                          selectable: !0,
                        })),
                      u.requestRenderAll();
                  });
              })(i.id),
              (function (a) {
                t.find("#palleon-layers #" + a).on("click", function (a) {
                  var n = u.getObjects(),
                    l = e(this).attr("id");
                  n
                    .filter((e) => e.id == l)
                    .forEach((e) => u.setActiveObject(e)),
                    t.find("#palleon-layers > li").removeClass("active"),
                    e(this).addClass("active"),
                    u.requestRenderAll();
                });
              })(i.id),
              t.find("#palleon-layers").sortable("refresh"),
              B();
          }
      }),
      u.on("object:modified", function (e) {
        var a = e.target;
        "textbox" == a.objectType &&
          a.id &&
          (t.find("#palleon-layers #" + a.id + " .layer-name").html(a.text),
          t.find("#text-rotate").val(parseInt(u.getActiveObject().angle)),
          t
            .find("#text-rotate")
            .parent()
            .parent()
            .find(".slider-label span")
            .html(parseInt(u.getActiveObject().angle))),
          "image" == a.objectType &&
            a.id &&
            (t.find("#img-rotate").val(parseInt(u.getActiveObject().angle)),
            t
              .find("#img-rotate")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(parseInt(u.getActiveObject().angle))),
          "element" == a.objectType &&
            a.id &&
            (t.find("#element-rotate").val(parseInt(u.getActiveObject().angle)),
            t
              .find("#element-rotate")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(parseInt(u.getActiveObject().angle))),
          C.includes(a.objectType) &&
            a.id &&
            (t.find("#shape-rotate").val(parseInt(u.getActiveObject().angle)),
            t
              .find("#shape-rotate")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(parseInt(u.getActiveObject().angle))),
          "clipPath" == a.objectType &&
            ((a.lockScalingX = !1),
            (a.lockScalingY = !1),
            (a.lockMovementX = !1),
            (a.lockMovementY = !1));
      }),
      t.find(".palleon-horizontal-center").on("click", function () {
        var e = u.getActiveObject();
        e.set("originX", "center"),
          e.set("left", H()[0] / 2),
          u.requestRenderAll();
      }),
      t.find(".palleon-vertical-center").on("click", function () {
        var e = u.getActiveObject();
        e.set("originY", "center"),
          e.set("top", H()[1] / 2),
          u.requestRenderAll();
      }),
      u.on("selection:created", function (e) {
        D(e.selected);
      }),
      u.on("selection:updated", function (e) {
        D(e.selected), t.find("#palleon-font-family").trigger("change");
      }),
      u.on("selection:cleared", function () {
        t.find("#palleon-text-settings").hide(),
          t.find("#palleon-image-settings").hide(),
          t.find("#palleon-shape-settings").hide(),
          t.find("#palleon-custom-element-options").hide(),
          t.find("#palleon-custom-element-options-info").show(),
          t.find("#palleon-layers > li").removeClass("active");
      }),
      t
        .find("#palleon-layers")
        .sortable({
          placeholder: "layer-placeholder",
          axis: "y",
          update: function (a, n) {
            var t = u.getObjects();
            e("#palleon-layers li").each(function (a, n) {
              e(this).attr("data-sort", a + 1),
                t
                  .filter((e) => e.id == n.id)
                  .forEach((e) => e.moveTo(-(a + 1)));
            }),
              u.requestRenderAll();
          },
          create: function (e, a) {
            B();
          },
        })
        .disableSelection(),
      t.find("#palleon-layers").on("click", ".layer-settings", function () {
        var a = e(this).next();
        e(this).hasClass("active")
          ? (e(this).removeClass("active"), a.hide())
          : (t.find("#palleon-layers .layer-icons").hide(),
            t.find("#palleon-layers .layer-settings").removeClass("active"),
            e(this).addClass("active"),
            a.show());
      }),
      t.find("#palleon-layer-delete").on("click", function () {
        if (window.confirm("Are you sure you want to delete the layers?")) {
          var e = t.find("#palleon-layer-select").val(),
            a = u.getObjects();
          "all" == e
            ? (a.forEach((e) => u.remove(e)),
              t.find("#palleon-layers > li").remove())
            : (a.filter((a) => a.objectType == e).forEach((e) => u.remove(e)),
              t.find("#palleon-layers > li.layer-" + e).remove()),
            u.requestRenderAll(),
            t.find("#palleon-layers").sortable("refresh"),
            B();
        }
      }),
      t.find("#palleon-img-drag").on("click", function () {
        e(this).hasClass("active")
          ? (e(this).removeClass("active"),
            t.find("#palleon-canvas-overlay").hide(),
            t.find("#palleon-canvas-wrap").draggable("disable"))
          : (e(this).addClass("active"),
            t.find("#palleon-canvas-overlay").show(),
            t.find("#palleon-canvas-wrap").draggable("enable"));
      }),
      t
        .find(".palleon-counter input.palleon-form-field")
        .on("input", function () {
          M(parseInt(e(this).val()));
        });
    var W = function (e) {
      t.find("#palleon-resize-width").val(Math.round(e.width)),
        t.find("#palleon-resize-height").val(Math.round(e.height)),
        t.find("#palleon-img-width").html(Math.round(e.width)),
        t.find("#palleon-img-height").html(Math.round(e.height)),
        t.find("#palleon-crop-width").val(Math.round(e.width / 2)),
        t.find("#palleon-crop-height").val(Math.round(e.height / 2)),
        "image" == o
          ? (t.find("#palleon-resize-width").data("max", Math.round(e.width)),
            t.find("#palleon-resize-height").data("max", Math.round(e.height)),
            t.find("#palleon-crop-width").data("max", Math.round(e.width)),
            t.find("#palleon-crop-height").data("max", Math.round(e.height)))
          : (t.find("#palleon-resize-width").data("max", ""),
            t.find("#palleon-resize-height").data("max", ""));
    };
    function E() {
      var e = u.getObjects();
      e
        .filter((e) => "BG" != e.objectType)
        .forEach((e) => e.set("visible", !1)),
        (u.backgroundColor = "transparent");
      var a = O(u.toDataURL({ format: "png", enableRetinaScaling: !1 }));
      (s = URL.createObjectURL(a)),
        t.find("#palleon-canvas-img").attr("src", s),
        (u.backgroundColor = t.find("#custom-image-background").val()),
        e
          .filter((e) => "BG" != e.objectType)
          .forEach((e) => e.set("visible", !0));
    }
    function G() {
      var e = u.getObjects();
      v.moveTo(9999),
        u.setActiveObject(v),
        t.find("#palleon-crop-btns").removeClass("disabled"),
        t
          .find(
            ".palleon-icon-panel-content ul.palleon-accordion > li, #palleon-icon-menu, #palleon-top-bar, #palleon-right-col"
          )
          .css("pointer-events", "none"),
        t
          .find(
            ".palleon-icon-panel-content ul.palleon-accordion > li.accordion-crop"
          )
          .css("pointer-events", "auto"),
        e
          .filter((e) => "clipPath" != e.objectType && "BG" != e.objectType)
          .forEach((e) => e.set("selectable", !1));
    }
    function _(e) {
      0 == p || 180 == p || -180 == p
        ? (u.setDimensions({ width: d, height: c }),
          (f = u.height / r.width),
          (h = u.width / r.height))
        : (u.setDimensions({ width: c, height: d }),
          (f = u.width / r.width),
          (h = u.height / r.height)),
        "right" == e
          ? 0 == p
            ? ((p = 90), (g = "left"), (m = "bottom"))
            : 90 == p
            ? ((p = 180), (g = "right"), (m = "bottom"))
            : 180 == p
            ? ((p = 270), (g = "right"), (m = "top"))
            : 270 == p
            ? ((p = 0), (g = "left"), (m = "top"))
            : -90 == p
            ? ((p = 0), (g = "left"), (m = "top"))
            : -180 == p
            ? ((p = -90), (g = "right"), (m = "top"))
            : -270 == p && ((p = -180), (g = "right"), (m = "bottom"))
          : "left" == e &&
            (0 == p
              ? ((p = -90), (g = "right"), (m = "top"))
              : -90 == p
              ? ((p = -180), (g = "right"), (m = "bottom"))
              : -180 == p
              ? ((p = -270), (g = "left"), (m = "bottom"))
              : -270 == p
              ? ((p = 0), (g = "left"), (m = "top"))
              : 90 == p
              ? ((p = 0), (g = "left"), (m = "top"))
              : 180 == p
              ? ((p = 90), (g = "left"), (m = "bottom"))
              : 270 == p && ((p = 180), (g = "right"), (m = "bottom"))),
        u.backgroundImage.set({
          scaleX: f,
          scaleY: h,
          angle: p,
          originX: g,
          originY: m,
        }),
        W(u),
        M(),
        u.requestRenderAll();
    }
    t.find("#palleon-crop-style").on("change", function () {
      if (
        ("" != e(this).val() && e(this).select2("enable", !1),
        "freeform" == e(this).val())
      )
        ((v = new fabric.Rect({
          fill: "rgba(156, 39, 176, 0.3)",
          width: c / 2,
          height: d / 2,
          excludeFromExport: !0,
          objectType: "clipPath",
        })).controls = {
          ...fabric.Rect.prototype.controls,
          mtr: new fabric.Control({ visible: !1 }),
        }),
          u.add(v),
          G();
      else if ("custom" == e(this).val()) {
        t.find(".crop-custom").css("display", "flex");
        var a = parseInt(t.find("#palleon-crop-width").val()),
          n = parseInt(t.find("#palleon-crop-height").val());
        ((v = new fabric.Rect({
          fill: "rgba(156, 39, 176, 0.3)",
          width: a,
          height: n,
          excludeFromExport: !0,
          objectType: "clipPath",
        })).controls = {
          ...fabric.Rect.prototype.controls,
          mtr: new fabric.Control({ visible: !1 }),
          ml: new fabric.Control({ visible: !1 }),
          mb: new fabric.Control({ visible: !1 }),
          mr: new fabric.Control({ visible: !1 }),
          mt: new fabric.Control({ visible: !1 }),
          tl: new fabric.Control({ visible: !1 }),
          bl: new fabric.Control({ visible: !1 }),
          tr: new fabric.Control({ visible: !1 }),
          br: new fabric.Control({ visible: !1 }),
        }),
          u.add(v),
          G();
      } else if ("square" == e(this).val()) {
        var l = d / 2;
        c >= d && (l = c / 2),
          ((v = new fabric.Rect({
            fill: "rgba(156, 39, 176, 0.3)",
            width: l,
            height: l,
            excludeFromExport: !0,
            objectType: "clipPath",
          })).controls = {
            ...fabric.Rect.prototype.controls,
            mtr: new fabric.Control({ visible: !1 }),
            ml: new fabric.Control({ visible: !1 }),
            mb: new fabric.Control({ visible: !1 }),
            mr: new fabric.Control({ visible: !1 }),
            mt: new fabric.Control({ visible: !1 }),
          }),
          u.add(v),
          G();
      } else if ("original" == e(this).val())
        ((v = new fabric.Rect({
          fill: "rgba(156, 39, 176, 0.3)",
          width: c / 2,
          height: d / 2,
          excludeFromExport: !0,
          objectType: "clipPath",
        })).controls = {
          ...fabric.Rect.prototype.controls,
          mtr: new fabric.Control({ visible: !1 }),
          ml: new fabric.Control({ visible: !1 }),
          mb: new fabric.Control({ visible: !1 }),
          mr: new fabric.Control({ visible: !1 }),
          mt: new fabric.Control({ visible: !1 }),
        }),
          u.add(v),
          G();
      else {
        u
          .getObjects()
          .filter(
            (e) =>
              "clipPath" != e.objectType &&
              "BG" != e.objectType &&
              "drawing" != e.objectType
          )
          .forEach((e) => e.set("selectable", !0)),
          t.find(".crop-custom").css("display", "none"),
          t.find("#palleon-crop-btns").addClass("disabled"),
          t
            .find(
              ".palleon-icon-panel-content ul.palleon-accordion > li, #palleon-icon-menu, #palleon-top-bar, #palleon-right-col"
            )
            .css("pointer-events", "auto");
      }
    }),
      t.find("#palleon-crop-cancel").on("click", function () {
        t.find("#palleon-crop-btns").addClass("disabled"),
          t.find("#palleon-crop-style").select2("enable"),
          t.find("#palleon-crop-style").val(""),
          t.find("#palleon-crop-style").trigger("change"),
          u.remove(""),
          u.remove(v);
      }),
      t.find("#palleon-crop-apply").on("click", function () {
        if (window.confirm("Are you sure you want to crop the image?")) {
          t.find("#palleon-crop-btns").addClass("disabled"),
            t.find("#palleon-crop-style").select2("enable"),
            t.find("#palleon-crop-style").val(""),
            t.find("#palleon-crop-style").trigger("change"),
            u.setZoom(1),
            t.find("#palleon-img-zoom").val(100);
          var e = v.getBoundingRect();
          u.setWidth(e.width - 1),
            u.setHeight(e.height - 1),
            u.backgroundImage.set({ top: -e.top, left: -e.left }),
            u.remove(""),
            u.remove(v),
            E(),
            t.find("#palleon-canvas-img-wrap").imagesLoaded(function () {
              (c = u.width),
                (d = u.height),
                (p = 0),
                (g = "left"),
                (m = "top"),
                (f = 1),
                (h = 1),
                L(),
                W(u),
                M(),
                u.requestRenderAll();
            });
        }
      }),
      t.find("#palleon-crop-width").bind("input paste", function () {
        if (t.find("#palleon-crop-lock").hasClass("active")) {
          var a =
            e(this).data("max") / t.find("#palleon-crop-height").data("max");
          t.find("#palleon-crop-height").val(Math.round(this.value / a));
        }
        v.set("width", parseInt(e(this).val())),
          v.set("height", parseInt(t.find("#palleon-crop-height").val())),
          u.requestRenderAll();
      }),
      t.find("#palleon-crop-height").bind("input paste", function () {
        if (t.find("#palleon-crop-lock").hasClass("active")) {
          var a =
            e(this).data("max") / t.find("#palleon-crop-width").data("max");
          t.find("#palleon-crop-width").val(Math.round(this.value / a));
        }
        v.set("height", parseInt(e(this).val())),
          v.set("width", parseInt(t.find("#palleon-crop-width").val())),
          u.requestRenderAll();
      }),
      t.find("#palleon-resize-apply").on("click", function () {
        var e, a;
        window.confirm("Are you sure you want to resize the image?") &&
          ((e = parseInt(t.find("#palleon-resize-width").val())),
          (a = parseInt(t.find("#palleon-resize-height").val())),
          (c = e),
          (d = a),
          u.setZoom(1),
          t.find("#palleon-img-zoom").val(100),
          u.setWidth(e),
          u.setHeight(a),
          0 == p || 180 == p || -180 == p
            ? ((f = u.width / t.find("#palleon-canvas-img")[0].width),
              (h = u.height / t.find("#palleon-canvas-img")[0].height))
            : ((f = u.height / t.find("#palleon-canvas-img")[0].width),
              (h = u.width / t.find("#palleon-canvas-img")[0].height)),
          u.backgroundImage.set({ scaleX: f, scaleY: h }),
          E(),
          t.find("#palleon-canvas-img-wrap").imagesLoaded(function () {
            (c = u.width),
              (d = u.height),
              (p = 0),
              (g = "left"),
              (m = "top"),
              (f = 1),
              (h = 1),
              L(),
              W(u),
              M(),
              u.requestRenderAll();
          }));
      }),
      t.find("#palleon-resize-width").bind("input paste", function () {
        if (t.find("#palleon-resize-lock").hasClass("active")) {
          var a =
            e(this).data("max") / t.find("#palleon-resize-height").data("max");
          t.find("#palleon-resize-height").val(Math.round(this.value / a));
        }
      }),
      t.find("#palleon-resize-height").bind("input paste", function () {
        if (t.find("#palleon-resize-lock").hasClass("active")) {
          var a =
            e(this).data("max") / t.find("#palleon-resize-width").data("max");
          t.find("#palleon-resize-width").val(Math.round(this.value / a));
        }
      }),
      t.find("#palleon-rotate-right").on("click", function () {
        _("right");
      }),
      t.find("#palleon-rotate-left").on("click", function () {
        _("left");
      }),
      t.find("#palleon-flip-horizontal").on("click", function () {
        u.backgroundImage.toggle("flipX"), u.requestRenderAll();
      }),
      t.find("#palleon-flip-vertical").on("click", function () {
        u.backgroundImage.toggle("flipY"), u.requestRenderAll();
      }),
      t.find("#palleon-brightness").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(
              new fabric.Image.filters.Brightness()
            )
          : (t.find("#brightness").val(0),
            t
              .find("#brightness")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Brightness" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#brightness").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "Brightness" == e.type)
          .forEach((e) => (e.brightness = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-contrast").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(new fabric.Image.filters.Contrast())
          : (t.find("#contrast").val(0),
            t
              .find("#contrast")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Contrast" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#contrast").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "Contrast" == e.type)
          .forEach((e) => (e.contrast = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-saturation").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(
              new fabric.Image.filters.Saturation()
            )
          : (t.find("#saturation").val(0),
            t
              .find("#saturation")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Saturation" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#saturation").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "Saturation" == e.type)
          .forEach((e) => (e.saturation = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-hue").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(
              new fabric.Image.filters.HueRotation()
            )
          : (t.find("#hue").val(0),
            t.find("#hue").parent().parent().find(".slider-label span").html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "HueRotation" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#hue").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "HueRotation" == e.type)
          .forEach((e) => (e.rotation = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-filters input[type=checkbox]").on("change", function () {
        e(this).is(":checked")
          ? "grayscale" == e(this).attr("id")
            ? u.backgroundImage.filters.push(
                new fabric.Image.filters.Grayscale()
              )
            : "sepia" == e(this).attr("id")
            ? u.backgroundImage.filters.push(new fabric.Image.filters.Sepia())
            : "blackwhite" == e(this).attr("id")
            ? u.backgroundImage.filters.push(
                new fabric.Image.filters.BlackWhite()
              )
            : "brownie" == e(this).attr("id")
            ? u.backgroundImage.filters.push(new fabric.Image.filters.Brownie())
            : "vintage" == e(this).attr("id")
            ? u.backgroundImage.filters.push(new fabric.Image.filters.Vintage())
            : "kodachrome" == e(this).attr("id")
            ? u.backgroundImage.filters.push(
                new fabric.Image.filters.Kodachrome()
              )
            : "technicolor" == e(this).attr("id")
            ? u.backgroundImage.filters.push(
                new fabric.Image.filters.Technicolor()
              )
            : "polaroid" == e(this).attr("id")
            ? u.backgroundImage.filters.push(
                new fabric.Image.filters.Polaroid()
              )
            : "shift" == e(this).attr("id")
            ? u.backgroundImage.filters.push(new fabric.Image.filters.Shift())
            : "invert" == e(this).attr("id")
            ? u.backgroundImage.filters.push(new fabric.Image.filters.Invert())
            : "sharpen" == e(this).attr("id")
            ? (t.find("#emboss").prop("checked", !1),
              t.find("#sobelX").prop("checked", !1),
              t.find("#sobelY").prop("checked", !1),
              (u.backgroundImage.filters = u.backgroundImage.filters.filter(
                (e) => "Convolute" != e.type
              )),
              u.backgroundImage.filters.push(
                new fabric.Image.filters.Convolute({
                  matrix: [0, -1, 0, -1, 5, -1, 0, -1, 0],
                })
              ))
            : "emboss" == e(this).attr("id")
            ? (t.find("#sharpen").prop("checked", !1),
              t.find("#sobelX").prop("checked", !1),
              t.find("#sobelY").prop("checked", !1),
              (u.backgroundImage.filters = u.backgroundImage.filters.filter(
                (e) => "Convolute" != e.type
              )),
              u.backgroundImage.filters.push(
                new fabric.Image.filters.Convolute({
                  matrix: [1, 1, 1, 1, 0.7, -1, -1, -1, -1],
                })
              ))
            : "sobelX" == e(this).attr("id")
            ? (t.find("#emboss").prop("checked", !1),
              t.find("#sharpen").prop("checked", !1),
              t.find("#sobelY").prop("checked", !1),
              (u.backgroundImage.filters = u.backgroundImage.filters.filter(
                (e) => "Convolute" != e.type
              )),
              u.backgroundImage.filters.push(
                new fabric.Image.filters.Convolute({
                  matrix: [-1, 0, 1, -2, 0, 2, -1, 0, 1],
                })
              ))
            : "sobelY" == e(this).attr("id") &&
              (t.find("#emboss").prop("checked", !1),
              t.find("#sharpen").prop("checked", !1),
              t.find("#sobelX").prop("checked", !1),
              (u.backgroundImage.filters = u.backgroundImage.filters.filter(
                (e) => "Convolute" != e.type
              )),
              u.backgroundImage.filters.push(
                new fabric.Image.filters.Convolute({
                  matrix: [-1, -2, -1, 0, 0, 0, 1, 2, 1],
                })
              ))
          : "grayscale" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Grayscale" != e.type
            ))
          : "sepia" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Sepia" != e.type
            ))
          : "blackwhite" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "BlackWhite" != e.type
            ))
          : "brownie" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Brownie" != e.type
            ))
          : "vintage" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Vintage" != e.type
            ))
          : "kodachrome" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Kodachrome" != e.type
            ))
          : "technicolor" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Technicolor" != e.type
            ))
          : "polaroid" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Polaroid" != e.type
            ))
          : "shift" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Shift" != e.type
            ))
          : "invert" == e(this).attr("id")
          ? (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Invert" != e.type
            ))
          : "sharpen" == e(this).attr("id")
          ? (t.find("#emboss").prop("checked", !1),
            t.find("#sobelX").prop("checked", !1),
            t.find("#sobelY").prop("checked", !1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Convolute" != e.type
            )))
          : "emboss" == e(this).attr("id")
          ? (t.find("#sharpen").prop("checked", !1),
            t.find("#sobelX").prop("checked", !1),
            t.find("#sobelY").prop("checked", !1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Convolute" != e.type
            )))
          : "sobelX" == e(this).attr("id")
          ? (t.find("#emboss").prop("checked", !1),
            t.find("#sharpen").prop("checked", !1),
            t.find("#sobelY").prop("checked", !1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Convolute" != e.type
            )))
          : "sobelY" == e(this).attr("id") &&
            (t.find("#emboss").prop("checked", !1),
            t.find("#sharpen").prop("checked", !1),
            t.find("#sobelX").prop("checked", !1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Convolute" != e.type
            ))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-gamma").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(new fabric.Image.filters.Gamma())
          : (t.find("#gamma-red").val(1),
            t
              .find("#gamma-red")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(1),
            t.find("#gamma-green").val(1),
            t
              .find("#gamma-green")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(1),
            t.find("#gamma-blue").val(1),
            t
              .find("#gamma-blue")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Gamma" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#palleon-gamma-settings input").on("input", function () {
        var a = [
          parseFloat(e("#gamma-red").val()),
          parseFloat(e("#gamma-green").val()),
          parseFloat(e("#gamma-blue").val()),
        ];
        u.backgroundImage.filters
          .filter((e) => "Gamma" == e.type)
          .forEach((e) => (e.gamma = a)),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-blur").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(new fabric.Image.filters.Blur())
          : (t.find("#blur").val(0),
            t
              .find("#blur")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Blur" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#blur").on("change", function () {
        u.backgroundImage.filters
          .filter((e) => "Blur" == e.type)
          .forEach((e) => (e.blur = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-noise").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(new fabric.Image.filters.Noise())
          : (t.find("#noise").val(0),
            t
              .find("#noise")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(0),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Noise" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#noise").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "Noise" == e.type)
          .forEach((e) => (e.noise = parseInt(this.value, 10))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-pixelate").on("change", function () {
        e(this).is(":checked")
          ? u.backgroundImage.filters.push(new fabric.Image.filters.Pixelate())
          : (t.find("#pixelate").val(1),
            t
              .find("#pixelate")
              .parent()
              .parent()
              .find(".slider-label span")
              .html(1),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Pixelate" != e.type
            )),
            u.backgroundImage.applyFilters()),
          u.requestRenderAll();
      }),
      t.find("#pixelate").on("change", function () {
        u.backgroundImage.filters
          .filter((e) => "Pixelate" == e.type)
          .forEach((e) => (e.blocksize = parseInt(this.value, 10))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-blend-color").on("change", function () {
        if (e(this).is(":checked")) {
          var a = t.find("#blend-color-mode").val(),
            n = t.find("#blend-color-color").val(),
            l = parseFloat(t.find("#blend-color-alpha").val());
          u.backgroundImage.filters.push(new fabric.Image.filters.BlendColor()),
            u.backgroundImage.filters
              .filter((e) => "BlendColor" == e.type)
              .forEach(
                (e) => (e.mode = a),
                (e) => (e.color = n),
                (e) => (e.alpha = parseFloat(l))
              );
        } else t.find("#blend-color-mode").val("add"), t.find("#blend-color-color").spectrum("set", "#ffffff"), t.find("#blend-color-alpha").val(0.5), t.find("#blend-color-alpha").parent().parent().find(".slider-label span").html(0.5), (u.backgroundImage.filters = u.backgroundImage.filters.filter((e) => "BlendColor" != e.type));
        u.backgroundImage.applyFilters(), u.requestRenderAll();
      }),
      t.find("#blend-color-mode").on("change", function () {
        u.backgroundImage.filters
          .filter((e) => "BlendColor" == e.type)
          .forEach((e) => (e.mode = this.value)),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#blend-color-color").on("change", function () {
        u.backgroundImage.filters
          .filter((e) => "BlendColor" == e.type)
          .forEach((e) => (e.color = this.value)),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#blend-color-alpha").on("input", function () {
        u.backgroundImage.filters
          .filter((e) => "BlendColor" == e.type)
          .forEach((e) => (e.alpha = parseFloat(this.value))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-duotone-color").on("change", function () {
        e(this).is(":checked")
          ? ((w = new fabric.Image.filters.Composed({
              subFilters: [
                new fabric.Image.filters.Grayscale({ mode: "luminosity" }),
                new fabric.Image.filters.BlendColor({
                  color: t.find("#duotone-light-color").val(),
                }),
                new fabric.Image.filters.BlendColor({
                  color: t.find("#duotone-dark-color").val(),
                  mode: "lighten",
                }),
              ],
            })),
            u.backgroundImage.filters.push(w))
          : (t.find("#duotone-light-color").spectrum("set", "green"),
            t.find("#duotone-dark-color").spectrum("set", "blue"),
            (u.backgroundImage.filters = u.backgroundImage.filters.filter(
              (e) => "Composed" != e.type
            ))),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#duotone-light-color").on("change", function () {
        (u.backgroundImage.filters = u.backgroundImage.filters.filter(
          (e) => "Composed" != e.type
        )),
          u.backgroundImage.filters.push(w),
          (w.subFilters[1].color = e(this).val()),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#duotone-dark-color").on("change", function () {
        (u.backgroundImage.filters = u.backgroundImage.filters.filter(
          (e) => "Composed" != e.type
        )),
          u.backgroundImage.filters.push(w),
          (w.subFilters[2].color = e(this).val()),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll();
      }),
      t.find("#palleon-swap-apply").on("click", function () {
        var a = new fabric.Image.filters.SwapColor({
          colorSource: t.find("#color-source").val(),
          colorDestination: t.find("#color-destination").val(),
        });
        u.backgroundImage.filters.push(a),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll(),
          e(this).prop("disabled", !0),
          t.find("#palleon-swap-remove").prop("disabled", !1);
      }),
      t.find("#palleon-swap-remove").on("click", function () {
        (u.backgroundImage.filters = u.backgroundImage.filters.filter(
          (e) => "SwapColor" != e.type
        )),
          u.backgroundImage.applyFilters(),
          u.requestRenderAll(),
          e(this).prop("disabled", !0),
          t.find("#palleon-swap-apply").prop("disabled", !1);
      }),
      t.find("#palleon-swap-colors").on("change", function () {
        e(this).is(":checked") ||
          t.find("#palleon-swap-remove").trigger("click");
      });
    function U(e) {
      var a = u.getActiveObject();
      a.set("gradientFill", t.find("#palleon-" + e + "-gradient").val());
      var n = "";
      if (
        ("" == t.find("#" + e + "-gradient-color-3").val() &&
        "" == t.find("#" + e + "-gradient-color-4").val()
          ? (n = [
              { offset: 0, color: t.find("#" + e + "-gradient-color-1").val() },
              { offset: 1, color: t.find("#" + e + "-gradient-color-2").val() },
            ])
          : "" != t.find("#" + e + "-gradient-color-3").val() &&
            "" == t.find("#" + e + "-gradient-color-4").val()
          ? (n = [
              { offset: 0, color: t.find("#" + e + "-gradient-color-1").val() },
              {
                offset: 0.5,
                color: t.find("#" + e + "-gradient-color-2").val(),
              },
              { offset: 1, color: t.find("#" + e + "-gradient-color-3").val() },
            ])
          : "" != t.find("#" + e + "-gradient-color-1").val() &&
            "" != t.find("#" + e + "-gradient-color-2").val() &&
            "" != t.find("#" + e + "-gradient-color-3").val() &&
            "" != t.find("#" + e + "-gradient-color-4").val() &&
            (n = [
              { offset: 0, color: t.find("#" + e + "-gradient-color-1").val() },
              {
                offset: 0.25,
                color: t.find("#" + e + "-gradient-color-2").val(),
              },
              {
                offset: 0.75,
                color: t.find("#" + e + "-gradient-color-3").val(),
              },
              { offset: 1, color: t.find("#" + e + "-gradient-color-4").val() },
            ]),
        "vertical" == t.find("#palleon-" + e + "-gradient").val())
      ) {
        if (
          (t.find("#" + e + "-gradient-settings").show(),
          t.find("#" + e + "-fill-color").hide(),
          a.set(
            "fill",
            new fabric.Gradient({
              type: "linear",
              gradientUnits: "percentage",
              coords: { x1: 0, y1: 0, x2: 0, y2: 1 },
              colorStops: n,
            })
          ),
          "element" == a.objectType && a._objects)
        )
          for (var l = 0; l < a._objects.length; l++)
            "" != a._objects[l].fill &&
              a._objects[l].set({
                fill: new fabric.Gradient({
                  type: "linear",
                  gradientUnits: "percentage",
                  coords: { x1: 0, y1: 0, x2: 0, y2: 1 },
                  colorStops: n,
                }),
              });
      } else if ("horizontal" == t.find("#palleon-" + e + "-gradient").val()) {
        if (
          (t.find("#" + e + "-gradient-settings").show(),
          t.find("#" + e + "-fill-color").hide(),
          a.set(
            "fill",
            new fabric.Gradient({
              type: "linear",
              gradientUnits: "percentage",
              coords: { x1: 0, y1: 0, x2: 1, y2: 0 },
              colorStops: n,
            })
          ),
          "element" == a.objectType && a._objects)
        )
          for (l = 0; l < a._objects.length; l++)
            "" != a._objects[l].fill &&
              a._objects[l].set({
                fill: new fabric.Gradient({
                  type: "linear",
                  gradientUnits: "percentage",
                  coords: { x1: 0, y1: 0, x2: 1, y2: 0 },
                  colorStops: n,
                }),
              });
      } else if (
        (t.find("#" + e + "-gradient-settings").hide(),
        t.find("#" + e + "-fill-color").show(),
        a.set("fill", t.find("#palleon-" + e + "-color").val()),
        "element" == a.objectType && a._objects)
      )
        for (l = 0; l < a._objects.length; l++)
          "" != a._objects[l].fill &&
            a._objects[l].set("fill", t.find("#palleon-" + e + "-color").val());
      u.requestRenderAll();
    }
    e.each(["text", "image", "shape", "element"], function (a, n) {
      t.find("#palleon-" + n + "-shadow").on("change", function () {
        var a = new fabric.Shadow({
          color: t.find("#" + n + "-shadow-color").val(),
          blur: t.find("#" + n + "-shadow-blur").val(),
          offsetX: t.find("#" + n + "-shadow-offset-x").val(),
          offsetY: t.find("#" + n + "-shadow-offset-y").val(),
        });
        e(this).is(":checked")
          ? (u.getActiveObject().shadow = a)
          : (u.getActiveObject().shadow = null),
          u.requestRenderAll();
      }),
        t.find("#" + n + "-shadow-color").bind("change", function () {
          (u.getActiveObject().shadow.color = e(this).val()),
            u.requestRenderAll();
        }),
        t
          .find("#" + n + "-shadow-settings input[type=number]")
          .bind("input paste keyup keydown", function () {
            var a = e(this).val();
            e(this).attr("id") == n + "-shadow-blur"
              ? (u.getActiveObject().shadow.blur = parseInt(a))
              : e(this).attr("id") == n + "-shadow-offset-x"
              ? (u.getActiveObject().shadow.offsetX = parseInt(a))
              : e(this).attr("id") == n + "-shadow-offset-y" &&
                (u.getActiveObject().shadow.offsetY = parseInt(a)),
              u.requestRenderAll();
          });
    });
    function H() {
      var e = u.backgroundImage.getScaledHeight(),
        a = u.backgroundImage.getScaledWidth();
      return (
        (0 != p && 180 != p && -180 != p) ||
          ((e = u.backgroundImage.getScaledWidth()),
          (a = u.backgroundImage.getScaledHeight())),
        [e, a]
      );
    }
    function N(a) {
      var n = a.element;
      return e(n).data("icon")
        ? e(
            '<div class="select2-item"><span class="material-icons">' +
              e(n).data("icon") +
              "</span>" +
              a.text +
              "</div>"
          )
        : e('<div class="select2-item">' + a.text + "</div>");
    }
    e.each(["text", "shape", "element"], function (e, a) {
      t.find("#palleon-" + a + "-gradient").on("change", function () {
        U(a);
      }),
        t.find("#" + a + "-gradient-color-1").on("change", function () {
          U(a);
        }),
        t.find("#" + a + "-gradient-color-2").on("change", function () {
          U(a);
        }),
        t.find("#" + a + "-gradient-color-3").on("change", function () {
          U(a);
        }),
        t.find("#" + a + "-gradient-color-4").on("change", function () {
          U(a);
        });
    }),
      t.find("#palleon-add-text").on("click", function () {
        var e = new fabric.Textbox(palleonParams.textbox, {
          objectType: "textbox",
          gradientFill: "none",
          fontSize: i.fontSize,
          fontFamily: i.fontFamily,
          fontWeight: i.fontWeight,
          fontStyle: i.fontStyle,
          lineHeight: i.lineHeight,
          fill: i.fill,
          stroke: i.stroke,
          strokeWidth: i.strokeWidth,
          textBackgroundColor: i.textBackgroundColor,
          textAlign: i.textAlign,
          width: H()[0] / 2,
          top: H()[1] / 2,
          left: H()[0] / 2,
          originX: "center",
          originY: "center",
        });
        u.add(e), u.setActiveObject(e);
      }),
      t.find("#palleon-text-input").bind("input paste", function () {
        u.getActiveObject().set("text", e(this).val()),
          t
            .find("#palleon-layers #" + u.getActiveObject().id + " .layer-name")
            .html(u.getActiveObject().text),
          u.requestRenderAll();
      }),
      t.find("#palleon-font-family").on("change", function () {
        for (var a = e(this).val(), n = "yes", t = 0; t < I.length; t++)
          if (I[t][1] == a) {
            n = "no";
            break;
          }
        if ("yes" == n) {
          "undefined" == typeof palleonCustomFonts
            ? WebFont.load({
                google: {
                  families: [a + ":regular,bold", a + ":italic,regular,bold"],
                },
              })
            : palleonCustomFonts.fonts.includes(a) ||
              WebFont.load({
                google: {
                  families: [a + ":regular,bold", a + ":italic,regular,bold"],
                },
              });
          var l = new FontFaceObserver(a, {
              weight: "normal",
              style: "normal",
            }),
            i = new FontFaceObserver(a, { weight: "bold", style: "normal" }),
            o = new FontFaceObserver(a, { weight: "normal", style: "italic" }),
            r = new FontFaceObserver(a, { weight: "bold", style: "italic" });
          Promise.all([
            l.load(null, 5e3),
            i.load(null, 5e3),
            o.load(null, 5e3),
            r.load(null, 5e3),
          ])
            .then(function () {
              u.getActiveObject().set("fontFamily", a), u.requestRenderAll();
            })
            .catch(function (e) {
              console.log(e);
            });
        } else u.getActiveObject().set("fontFamily", a), u.requestRenderAll();
      }),
      t
        .find("#palleon-text-format-btns > .palleon-btn")
        .on("click", function () {
          e(this).hasClass("active")
            ? ("format-bold" == e(this).attr("id") &&
                (u.getActiveObject().set("fontWeight", "normal"),
                e(this).removeClass("active")),
              "format-italic" == e(this).attr("id") &&
                (u.getActiveObject().set("fontStyle", "normal"),
                e(this).removeClass("active")),
              "format-underlined" == e(this).attr("id") &&
                (u.getActiveObject().set("underline", !1),
                e(this).removeClass("active")))
            : ("format-bold" == e(this).attr("id") &&
                u.getActiveObject().set("fontWeight", "bold"),
              "format-italic" == e(this).attr("id") &&
                u.getActiveObject().set("fontStyle", "italic"),
              "format-underlined" == e(this).attr("id") &&
                u.getActiveObject().set("underline", !0),
              "format-align-left" == e(this).attr("id") &&
                u.getActiveObject().set("textAlign", "left"),
              "format-align-right" == e(this).attr("id") &&
                u.getActiveObject().set("textAlign", "right"),
              "format-align-center" == e(this).attr("id") &&
                u.getActiveObject().set("textAlign", "center"),
              "format-align-justify" == e(this).attr("id") &&
                u.getActiveObject().set("textAlign", "justify"),
              t.find(".format-align").removeClass("active"),
              e(this).addClass("active")),
            u.requestRenderAll();
        }),
      t
        .find("#palleon-text-settings input[type=number]")
        .bind("input paste keyup keydown", function () {
          var a = e(this).val();
          "palleon-font-size" == e(this).attr("id")
            ? u.getActiveObject().set("fontSize", parseInt(a))
            : "palleon-outline-size" == e(this).attr("id")
            ? u.getActiveObject().set("strokeWidth", parseInt(a))
            : "palleon-line-height" == e(this).attr("id")
            ? u.getActiveObject().set("lineHeight", parseFloat(a))
            : "palleon-letter-spacing" == e(this).attr("id") &&
              u.getActiveObject().set("charSpacing", parseInt(a)),
            u.requestRenderAll();
        }),
      t
        .find("#palleon-text-settings .palleon-colorpicker")
        .bind("change", function () {
          var a = e(this).val();
          "palleon-text-color" == e(this).attr("id")
            ? u.getActiveObject().set("fill", a)
            : "palleon-outline-color" == e(this).attr("id")
            ? u.getActiveObject().set("stroke", a)
            : "palleon-text-background" == e(this).attr("id") &&
              u.getActiveObject().set("textBackgroundColor", a),
            u.requestRenderAll();
        }),
      t.find("#palleon-text-flip-btns > .palleon-btn").on("click", function () {
        e(this).hasClass("active")
          ? ("text-flip-x" == e(this).attr("id")
              ? u.getActiveObject().set("flipX", !1)
              : "text-flip-y" == e(this).attr("id") &&
                u.getActiveObject().set("flipY", !1),
            e(this).removeClass("active"))
          : ("text-flip-x" == e(this).attr("id")
              ? u.getActiveObject().set("flipX", !0)
              : "text-flip-y" == e(this).attr("id") &&
                u.getActiveObject().set("flipY", !0),
            e(this).addClass("active")),
          u.requestRenderAll();
      }),
      t
        .find("#palleon-text-settings input[type=range]")
        .bind("input click", function () {
          var a = e(this).val();
          "text-skew-x" == e(this).attr("id")
            ? u.getActiveObject().set("skewX", parseInt(a))
            : "text-skew-y" == e(this).attr("id")
            ? u.getActiveObject().set("skewY", parseInt(a))
            : "text-rotate" == e(this).attr("id")
            ? u.getActiveObject().set("angle", parseInt(a))
            : "text-opacity" == e(this).attr("id") &&
              u.getActiveObject().set("opacity", parseFloat(a)),
            u.requestRenderAll();
        }),
      t.find("#palleon-img-upload").on("change", function (e) {
        var a = new FileReader();
        (a.onload = function (e) {
          var a = new Image();
          T(e.target.result, function (e) {
            (a.src = e),
              (a.onload = function () {
                var e = new fabric.Image(a);
                e.set({
                  objectType: "image",
                  roundedCorders: 0,
                  stroke: "#fff",
                  strokeWidth: 0,
                  top: H()[1] / 2,
                  left: H()[0] / 2,
                  originX: "center",
                  originY: "center",
                }),
                  u.add(e),
                  e.scaleToWidth(H()[0] / 2),
                  e.isPartiallyOnScreen() && e.scaleToHeight(H()[1] / 2),
                  u.setActiveObject(e),
                  u.requestRenderAll();
              });
          });
        }),
          a.readAsDataURL(e.target.files[0]);
      }),
      t.find("#img-flip-horizontal").on("click", function () {
        u.getActiveObject().toggle("flipX"), u.requestRenderAll();
      }),
      t.find("#img-flip-vertical").on("click", function () {
        u.getActiveObject().toggle("flipY"), u.requestRenderAll();
      });
    t.find("#img-border-radius").on("input", function () {
      u
        .getActiveObject()
        .set(
          "clipPath",
          ((e, a) =>
            new fabric.Rect({
              width: e.width,
              height: e.height,
              rx: a / e.scaleX,
              ry: a / e.scaleY,
              left: -e.width / 2,
              top: -e.height / 2,
            }))(u.getActiveObject(), parseInt(e(this).val()))
        ),
        u.getActiveObject().set("roundedCorders", parseInt(e(this).val())),
        u.requestRenderAll();
    }),
      t.find("#img-border-color").bind("change", function () {
        u.getActiveObject().set("stroke", e(this).val()), u.requestRenderAll();
      }),
      t
        .find("#palleon-image-settings input[type=number]")
        .on("input paste", function () {
          var a = parseInt(e(this).val());
          "img-border-width" == e(this).attr("id") &&
            u.getActiveObject().set("strokeWidth", a),
            u.requestRenderAll();
        }),
      t
        .find("#palleon-image-settings input[type=range]")
        .bind("input click", function () {
          var a = e(this).val();
          "img-skew-x" == e(this).attr("id")
            ? u.getActiveObject().set("skewX", parseInt(a))
            : "img-skew-y" == e(this).attr("id")
            ? u.getActiveObject().set("skewY", parseInt(a))
            : "img-rotate" == e(this).attr("id")
            ? u.getActiveObject().set("angle", parseInt(a))
            : "img-opacity" == e(this).attr("id") &&
              u.getActiveObject().set("opacity", parseFloat(a)),
            u.requestRenderAll();
        }),
      t.find("#palleon-shape-select").on("change", function () {
        var a = e(this).val();
        "none" == a || "custom" == a
          ? t.find("#palleon-shape-add").prop("disabled", !0)
          : t.find("#palleon-shape-add").prop("disabled", !1);
      }),
      t.find("#palleon-shape-add").on("click", function () {
        var e = t.find("#palleon-shape-select").val(),
          a = "",
          n = "";
        "circle" == e
          ? ((a = new fabric.Circle({
              radius: 50,
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "circle",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            })).controls = {
              ...fabric.Rect.prototype.controls,
              ml: new fabric.Control({ visible: !1 }),
              mb: new fabric.Control({ visible: !1 }),
              mr: new fabric.Control({ visible: !1 }),
              mt: new fabric.Control({ visible: !1 }),
            })
          : "ellipse" == e
          ? (a = new fabric.Ellipse({
              rx: 75,
              ry: 50,
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "ellipse",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            }))
          : "square" == e
          ? ((a = new fabric.Rect({
              radius: 50,
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "square",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            })).controls = {
              ...fabric.Rect.prototype.controls,
              ml: new fabric.Control({ visible: !1 }),
              mb: new fabric.Control({ visible: !1 }),
              mr: new fabric.Control({ visible: !1 }),
              mt: new fabric.Control({ visible: !1 }),
            })
          : "rectangle" == e
          ? (a = new fabric.Rect({
              radius: 50,
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "rectangle",
              width: 200,
              height: 150,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            }))
          : "triangle" == e
          ? (a = new fabric.Triangle({
              radius: 50,
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "triangle",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            }))
          : "trapezoid" == e
          ? ((n = [
              { x: -100, y: -50 },
              { x: 100, y: -50 },
              { x: 150, y: 50 },
              { x: -150, y: 50 },
            ]),
            (a = new fabric.Polygon(n, {
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "trapezoid",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            })))
          : "emerald" == e
          ? ((n = [
              { x: 850, y: 75 },
              { x: 958, y: 137.5 },
              { x: 958, y: 262.5 },
              { x: 850, y: 325 },
              { x: 742, y: 262.5 },
              { x: 742, y: 137.5 },
            ]),
            (a = new fabric.Polygon(n, {
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "emerald",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            })))
          : "star" == e &&
            ((n = [
              { x: 350, y: 75 },
              { x: 380, y: 160 },
              { x: 470, y: 160 },
              { x: 400, y: 215 },
              { x: 423, y: 301 },
              { x: 350, y: 250 },
              { x: 277, y: 301 },
              { x: 303, y: 215 },
              { x: 231, y: 161 },
              { x: 321, y: 161 },
            ]),
            (a = new fabric.Polygon(n, {
              fill: "#fff",
              stroke: "#000",
              strokeWidth: 0,
              objectType: "star",
              width: 100,
              height: 100,
              gradientFill: "none",
              top: H()[1] / 2,
              left: H()[0] / 2,
              originX: "center",
              originY: "center",
            }))),
          u.add(a),
          a.scaleToWidth(H()[0] / 6),
          a.isPartiallyOnScreen() && a.scaleToHeight(H()[1] / 6),
          u.setActiveObject(a),
          u.requestRenderAll();
      }),
      t
        .find("#palleon-shape-settings .palleon-colorpicker")
        .bind("change", function () {
          var a = e(this).val();
          "palleon-shape-color" == e(this).attr("id")
            ? u.getActiveObject().set("fill", a)
            : "shape-outline-color" == e(this).attr("id") &&
              u.getActiveObject().set("stroke", a),
            u.requestRenderAll();
        }),
      t
        .find("#palleon-shape-settings input[type=range]")
        .bind("input click", function () {
          var a = e(this).val();
          "shape-skew-x" == e(this).attr("id")
            ? u.getActiveObject().set("skewX", parseInt(a))
            : "shape-skew-y" == e(this).attr("id")
            ? u.getActiveObject().set("skewY", parseInt(a))
            : "shape-rotate" == e(this).attr("id")
            ? u.getActiveObject().set("angle", parseInt(a))
            : "shape-opacity" == e(this).attr("id") &&
              u.getActiveObject().set("opacity", parseFloat(a)),
            u.requestRenderAll();
        }),
      t
        .find("#palleon-shape-settings input[type=number]")
        .bind("input paste", function () {
          var a = parseInt(e(this).val());
          "shape-outline-width" == e(this).attr("id")
            ? u.getActiveObject().set("strokeWidth", a)
            : "shape-custom-width" == e(this).attr("id")
            ? (u.getActiveObject().set("width", a),
              u.getActiveObject().set("scaleX", 1))
            : "shape-custom-height" == e(this).attr("id") &&
              (u.getActiveObject().set("height", a),
              u.getActiveObject().set("scaleY", 1)),
            u.requestRenderAll();
        });
    function V(a) {
      var n = u.getObjects().filter((e) => "frame" == e.objectType);
      e.each(n, function (e, n) {
        var t = n.angle,
          l = n.width,
          i = n.height,
          o = H()[0],
          r = H()[1];
        (0 != t && 180 != t && -180 != t) || ((o = H()[1]), (r = H()[0])),
          "right" == a
            ? 0 == t
              ? (t = 90)
              : 90 == t
              ? (t = 180)
              : 180 == t
              ? (t = 270)
              : 270 == t
              ? (t = 0)
              : -90 == t
              ? (t = 0)
              : -180 == t
              ? (t = -90)
              : -270 == t && (t = -180)
            : "left" == a &&
              (0 == t
                ? (t = -90)
                : -90 == t
                ? (t = -180)
                : -180 == t
                ? (t = -270)
                : -270 == t
                ? (t = 0)
                : 90 == t
                ? (t = 0)
                : 180 == t
                ? (t = 90)
                : 270 == t && (t = 180)),
          n.set("left", H()[0] / 2),
          n.set("top", H()[1] / 2),
          n.set("scaleX", o / l),
          n.set("scaleY", r / i),
          n.set("angle", t);
      }),
        u.requestRenderAll();
    }
    t.find("#palleon-frame-search").on("keyup input", function () {
      t.find("#palleon-noframes").hide();
      var a = e(this).val().toLowerCase().replace(/\s/g, "");
      "" == a || a.length < 1
        ? (t.find("#palleon-frames-wrap li").show(),
          t.find("#palleon-frame-search-icon").html("search"),
          t.find("#palleon-frame-search-icon").removeClass("cancel"))
        : (t.find("#palleon-frame-search-icon").html("clear"),
          t.find("#palleon-frame-search-icon").addClass("cancel"),
          (function (e) {
            t.find("#palleon-frames-wrap li")
              .hide()
              .filter('[data-keyword*="' + e + '"]')
              .show();
          })(a),
          0 === t.find("#palleon-frames-wrap li:visible").length &&
            t.find("#palleon-noframes").show());
    }),
      t.find("#palleon-frame-search-icon").on("click", function () {
        e(this).hasClass("cancel") &&
          (e(this).removeClass("cancel"),
          e(this).html("search"),
          t.find("#palleon-frame-search").val(""),
          t.find("#palleon-frames-wrap li").show(),
          t.find("#palleon-noframes").hide());
      }),
      t
        .find(".palleon-frames-grid")
        .on("click", ".palleon-frame img", function () {
          t.find("#palleon-canvas-loader").css("display", "flex");
          var a = e(this).parent().parent(),
            n = a.data("elsource");
          t.find(".palleon-frames-grid .palleon-frame").removeClass("active"),
            a.addClass("active"),
            fabric.loadSVGFromURL(
              n,
              function (e, a) {
                var n = fabric.util.groupSVGElements(e, a),
                  l = n.width,
                  i = n.height;
                n.set("originX", "center"),
                  n.set("originY", "center"),
                  n.set("left", H()[0] / 2),
                  n.set("top", H()[1] / 2),
                  n.set("scaleX", (H()[0] + 2) / l),
                  n.set("scaleY", (H()[1] + 2) / i),
                  n.set("objectType", "frame"),
                  u.add(n),
                  u.setActiveObject(n),
                  u.requestRenderAll(),
                  t.find("#palleon-canvas-loader").hide();
              },
              function () {},
              { crossOrigin: "anonymous" }
            );
        }),
      t
        .find(".palleon-frames-grid")
        .on("click", ".frame-favorite button.star", function () {
          var a = e(this),
            n = a.data("frameid"),
            l = "add";
          a.hasClass("favorited")
            ? (t.find('*[data-frameid="' + n + '"]').removeClass("favorited"),
              (l = "remove"))
            : t.find('*[data-frameid="' + n + '"]').addClass("favorited");
          var i = {
            action: "favframe",
            nonce: palleonParams.nonce,
            frameid: n,
            mode: l,
          };
          e.ajax({
            url: palleonParams.ajaxurl,
            data: i,
            type: "POST",
            success: function (e) {
              "add" == l
                ? (t
                    .find('*[data-frameid="' + n + '"]')
                    .html('<span class="material-icons">star</span>'),
                  toastr.success(
                    palleonParams.favorited,
                    palleonParams.success
                  ))
                : (t
                    .find('*[data-frameid="' + n + '"]')
                    .html('<span class="material-icons">star_border</span>'),
                  toastr.success(
                    palleonParams.unfavorited,
                    palleonParams.success
                  )),
                e &&
                  (t.find("#palleon-frame-favorites > div").html(e),
                  P.update());
            },
            error: function (e, a, n) {
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
            },
          });
        }),
      t.find("#palleon-frame-color").bind("change", function () {
        var a = e(this).val(),
          n = u.getObjects().filter((e) => "frame" == e.objectType);
        e.each(n, function (e, n) {
          if (("" != n.fill && n.set("fill", a), n._objects))
            for (var t = 0; t < n._objects.length; t++)
              "" != n._objects[t].fill && n._objects[t].set({ fill: a });
        }),
          u.requestRenderAll();
      }),
      t.find("#palleon-rotate-right-frame").on("click", function () {
        V("right");
      }),
      t.find("#palleon-rotate-left-frame").on("click", function () {
        V("left");
      }),
      t.find("#palleon-flip-horizontal-frame").on("click", function () {
        var a = u.getObjects().filter((e) => "frame" == e.objectType);
        e.each(a, function (e, a) {
          a.toggle("flipX");
        }),
          u.requestRenderAll();
      }),
      t.find("#palleon-flip-vertical-frame").on("click", function () {
        var a = u.getObjects().filter((e) => "frame" == e.objectType);
        e.each(a, function (e, a) {
          a.toggle("flipY");
        }),
          u.requestRenderAll();
      });
    t.find("#palleon-element-search").on("keyup input", function () {
      t.find("#palleon-noelements").hide();
      var a = e(this).val().toLowerCase().replace(/\s/g, "");
      "" == a || a.length < 1
        ? (t.find("#palleon-elements-wrap li").show(),
          t.find("#palleon-element-search-icon").html("search"),
          t.find("#palleon-element-search-icon").removeClass("cancel"))
        : (t.find("#palleon-element-search-icon").html("clear"),
          t.find("#palleon-element-search-icon").addClass("cancel"),
          (function (e) {
            t.find("#palleon-elements-wrap li")
              .hide()
              .filter('[data-keyword*="' + e + '"]')
              .show();
          })(a),
          0 === t.find("#palleon-elements-wrap li:visible").length &&
            t.find("#palleon-noelements").show());
    }),
      t.find("#palleon-element-search-icon").on("click", function () {
        e(this).hasClass("cancel") &&
          (e(this).removeClass("cancel"),
          e(this).html("search"),
          t.find("#palleon-element-search").val(""),
          t.find("#palleon-elements-wrap li").show(),
          t.find("#palleon-noelements").hide());
      }),
      t
        .find(".palleon-elements-grid")
        .on("click", ".palleon-element > *:first-child", function () {
          var a = e(this).parent(),
            n = a.data("elsource");
          if ("palleon-icons-grid" == a.parent().attr("id")) {
            var l = t.find("#palleon-icon-style").val();
            (n = a.data("elsource") + "/" + l + "/24px.svg"), console.log(n);
          }
          var i = a.data("loader");
          "yes" == i && t.find("#palleon-canvas-loader").css("display", "flex"),
            t
              .find(".palleon-elements-grid .palleon-element")
              .removeClass("active"),
            a.addClass("active"),
            fabric.loadSVGFromURL(
              n,
              function (e, a) {
                var n = fabric.util.groupSVGElements(e, a);
                n.set("originX", "center"),
                  n.set("originY", "center"),
                  n.set("left", H()[0] / 2),
                  n.set("top", H()[1] / 2),
                  n.set("objectType", "element"),
                  n.set("gradientFill", "none"),
                  u.add(n),
                  n.scaleToWidth(H()[0] / 8),
                  n.isPartiallyOnScreen() && n.scaleToHeight(H()[1] / 8),
                  u.setActiveObject(n),
                  u.requestRenderAll(),
                  "yes" == i && t.find("#palleon-canvas-loader").hide();
              },
              function () {},
              { crossOrigin: "anonymous" }
            );
        }),
      t.find("#palleon-element-upload").on("change", function (e) {
        var a = new FileReader(),
          n = "";
        (a.onload = function (e) {
          (n = a.result),
            fabric.loadSVGFromURL(
              n,
              function (e, a) {
                var n = fabric.util.groupSVGElements(e, a);
                n.set("originX", "center"),
                  n.set("originY", "center"),
                  n.set("left", H()[0] / 2),
                  n.set("top", H()[1] / 2),
                  n.set("objectType", "customSVG"),
                  n.scaleToWidth(H()[0] / 2),
                  n.scaleToHeight(H()[1] / 2),
                  u.add(n),
                  u.setActiveObject(n),
                  u.requestRenderAll();
              },
              function () {},
              { crossOrigin: "anonymous" }
            );
        }),
          a.readAsDataURL(this.files[0]);
      }),
      t.find("#palleon-element-color").bind("change", function () {
        var a = e(this).val(),
          n = u.getActiveObject();
        if (("" != n.fill && n.set("fill", a), n._objects))
          for (var t = 0; t < n._objects.length; t++)
            "" != n._objects[t].fill && n._objects[t].set({ fill: a });
        u.requestRenderAll();
      }),
      t.find("#element-flip-horizontal").on("click", function () {
        u.getActiveObject().toggle("flipX"), u.requestRenderAll();
      }),
      t.find("#element-flip-vertical").on("click", function () {
        u.getActiveObject().toggle("flipY"), u.requestRenderAll();
      }),
      t
        .find("#palleon-custom-element-options input[type=range]")
        .bind("input click", function () {
          var a = e(this).val();
          "element-skew-x" == e(this).attr("id")
            ? u.getActiveObject().set("skewX", parseInt(a))
            : "element-skew-y" == e(this).attr("id")
            ? u.getActiveObject().set("skewY", parseInt(a))
            : "element-rotate" == e(this).attr("id")
            ? u.getActiveObject().set("angle", parseInt(a))
            : "element-opacity" == e(this).attr("id") &&
              u.getActiveObject().set("opacity", parseFloat(a)),
            u.requestRenderAll();
        }),
      t
        .find(".palleon-grid")
        .on("click", ".element-favorite button.star", function () {
          var a = e(this),
            n = a.data("elementid"),
            l = "add";
          a.hasClass("favorited")
            ? (t.find('*[data-elementid="' + n + '"]').removeClass("favorited"),
              (l = "remove"))
            : t.find('*[data-elementid="' + n + '"]').addClass("favorited");
          var i = {
            action: "favElement",
            nonce: palleonParams.nonce,
            elementid: n,
            mode: l,
          };
          e.ajax({
            url: palleonParams.ajaxurl,
            data: i,
            type: "POST",
            success: function (e) {
              "add" == l
                ? (toastr.success(
                    palleonParams.favorited,
                    palleonParams.success
                  ),
                  t
                    .find('*[data-elementid="' + n + '"]')
                    .html('<span class="material-icons">star</span>'))
                : (toastr.success(
                    palleonParams.unfavorited,
                    palleonParams.success
                  ),
                  t
                    .find('*[data-elementid="' + n + '"]')
                    .html('<span class="material-icons">star_border</span>')),
                e &&
                  (t.find("#palleon-my-favorites > div").html(e), P.update());
            },
            error: function (e, a, n) {
              e.status && 400 == e.status
                ? toastr.error(e.responseText, palleonParams.error)
                : toastr.error(palleonParams.wrong, palleonParams.error);
            },
          });
        });
    function Z(a, n) {
      e("#tm-cursor-1").remove(),
        t
          .find("#palleon-canvas-wrap")
          .tmpointer({
            id: 1,
            native_cursor: "enable",
            cursorSize: a,
            cursorColor: n,
          });
    }
    t.find("#palleon-icon-search").on("keyup input", function () {
      t.find("#palleon-noicons").hide();
      var a = e(this).val().toLowerCase().replace(/\s/g, "");
      "" == a || a.length < 1
        ? (t
            .find("#palleon-icons-grid .palleon-element")
            .css("display", "flex"),
          t.find("#palleon-icon-search-icon").html("search"),
          t.find("#palleon-icon-search-icon").removeClass("cancel"))
        : (t.find("#palleon-icon-search-icon").html("clear"),
          t.find("#palleon-icon-search-icon").addClass("cancel"),
          (function (e) {
            t.find("#palleon-icons-grid .palleon-element")
              .css("display", "none")
              .filter('[title*="' + e + '"]')
              .css("display", "flex");
          })(a),
          0 === t.find("#palleon-icons-grid .palleon-element:visible").length &&
            t.find("#palleon-noicons").show());
    }),
      t.find("#palleon-icon-search-icon").on("click", function () {
        e(this).hasClass("cancel") &&
          (e(this).removeClass("cancel"),
          e(this).html("search"),
          t.find("#palleon-icon-search").val(""),
          t.find("#palleon-icons-grid .palleon-element").css("display", "flex"),
          t.find("#palleon-noicons").hide());
      }),
      t.find("#palleon-draw-btn").on("click", function () {
        e(this).hasClass("active")
          ? (t.find("#palleon-draw-undo").prop("disabled", !0),
            e("#tm-cursor-1").remove(),
            t.find("#palleon-draw-settings").hide(),
            t.find("#palleon-icon-menu").css("pointer-events", "auto"),
            e(this).removeClass("active"),
            (u.isDrawingMode = !1),
            e(this).html(
              '<span class="material-icons">edit</span>Start Drawing'
            ))
          : (t.find("#palleon-draw-undo").prop("disabled", !1),
            t.find("#palleon-draw-settings").show(),
            t.find("#palleon-icon-menu").css("pointer-events", "none"),
            e(this).addClass("active"),
            t.find("#palleon-brush-select").trigger("change"),
            (u.isDrawingMode = !0),
            e(this).html(
              '<span class="material-icons">close</span>Stop Drawing'
            ));
      }),
      t.find("#palleon-brush-select").on("change", function () {
        var a = e(this).val();
        if ("pencil" == a) {
          var n = new fabric.PencilBrush(u);
          u.freeDrawingBrush = n;
        } else if ("circle" == a) {
          var l = new fabric.CircleBrush(u);
          u.freeDrawingBrush = l;
        } else if ("spray" == a) {
          var i = new fabric.SprayBrush(u);
          u.freeDrawingBrush = i;
        } else if ("hline" == a) {
          var o = new fabric.PatternBrush(u);
          (u.freeDrawingBrush = o),
            (o.getPatternSrc = function () {
              var e = parseInt(t.find("#brush-pattern-width").val()),
                a = e / 2,
                n = fabric.document.createElement("canvas");
              n.width = n.height = e;
              var l = n.getContext("2d");
              return (
                (l.strokeStyle = t.find("#brush-color").val()),
                (l.lineWidth = a),
                l.beginPath(),
                l.moveTo(a, 0),
                l.lineTo(a, e),
                l.closePath(),
                l.stroke(),
                n
              );
            });
        } else if ("vline" == a) {
          var r = new fabric.PatternBrush(u);
          (u.freeDrawingBrush = r),
            (r.getPatternSrc = function () {
              var e = parseInt(t.find("#brush-pattern-width").val()),
                a = e / 2,
                n = fabric.document.createElement("canvas");
              n.width = n.height = e;
              var l = n.getContext("2d");
              return (
                (l.strokeStyle = t.find("#brush-color").val()),
                (l.lineWidth = a),
                l.beginPath(),
                l.moveTo(0, a),
                l.lineTo(e, a),
                l.closePath(),
                l.stroke(),
                n
              );
            });
        } else if ("square" == a) {
          var s = new fabric.PatternBrush(u);
          (u.freeDrawingBrush = s),
            (s.getPatternSrc = function () {
              var e = parseInt(t.find("#brush-pattern-width").val()),
                a = parseInt(t.find("#brush-pattern-distance").val()),
                n = fabric.document.createElement("canvas");
              n.width = n.height = e + a;
              var l = n.getContext("2d");
              return (
                (l.fillStyle = t.find("#brush-color").val()),
                l.fillRect(0, 0, e, e),
                n
              );
            });
        } else if ("erase" == a) {
          var c = new fabric.EraserBrush(u);
          u.freeDrawingBrush = c;
        }
        (y = u.freeDrawingBrush).getPatternSrc &&
          (y.source = y.getPatternSrc.call(y)),
          (y.width = parseInt(t.find("#brush-width").val())),
          "erase" == a
            ? (t.find("#not-erase-brush").hide(),
              (y.shadow = null),
              (y.color = "#E91E63"))
            : ((u.freeDrawingBrush.inverted = !1),
              t.find("#palleon-draw-undo").removeClass("active"),
              t.find("#not-erase-brush").show(),
              (y.color = t.find("#brush-color").val())),
          t.find("#palleon-brush-shadow").is(":checked")
            ? (y.shadow = k)
            : (y.shadow = null),
          Z(y.width * u.getZoom(), y.color),
          "hline" == a || "vline" == a || "square" == a
            ? t.find("#palleon-brush-pattern-width").css("display", "flex")
            : t.find("#palleon-brush-pattern-width").css("display", "none"),
          "square" == a
            ? t.find("#palleon-brush-pattern-distance").css("display", "flex")
            : t.find("#palleon-brush-pattern-distance").css("display", "none");
      }),
      t.find("#palleon-brush-shadow").on("change", function () {
        (k = new fabric.Shadow({
          color: t.find("#brush-shadow-color").val(),
          blur: t.find("#brush-shadow-width").val(),
          offsetX: t.find("#brush-shadow-shadow-offset-x").val(),
          offsetY: t.find("#brush-shadow-shadow-offset-y").val(),
        })),
          e(this).is(":checked") ? (y.shadow = k) : (y.shadow = null);
      }),
      t
        .find("#palleon-draw-settings input[type=number]")
        .bind("input paste keyup keydown", function () {
          "brush-width" == e(this).attr("id")
            ? ((y.width = parseInt(e(this).val())),
              Z(y.width * u.getZoom(), y.color))
            : "brush-shadow-shadow-offset-x" == e(this).attr("id")
            ? (k.offsetX = parseInt(e(this).val()))
            : "brush-shadow-shadow-offset-y" == e(this).attr("id")
            ? (k.offsetY = parseInt(e(this).val()))
            : "brush-shadow-width" == e(this).attr("id")
            ? (k.blur = parseInt(e(this).val()))
            : "brush-pattern-width" == e(this).attr("id")
            ? t.find("#palleon-brush-select").trigger("change")
            : "brush-pattern-distance" == e(this).attr("id") &&
              t.find("#palleon-brush-select").trigger("change");
        }),
      t
        .find("#palleon-draw-settings .palleon-colorpicker")
        .bind("change", function () {
          "brush-color" == e(this).attr("id")
            ? ((y.color = e(this).val()),
              Z(y.width * u.getZoom(), y.color),
              t.find("#palleon-brush-select").trigger("change"))
            : "brush-shadow-color" == e(this).attr("id") &&
              (k.color = e(this).val());
        }),
      t.find("#palleon-draw-undo").on("click", function () {
        if ("erase" == t.find("#palleon-brush-select").val())
          u.backgroundImage &&
            (e(this).hasClass("active")
              ? (e(this).removeClass("active"),
                (u.freeDrawingBrush.inverted = !1))
              : (e(this).addClass("active"),
                (u.freeDrawingBrush.inverted = !0)));
        else {
          var a = u
            .getObjects()
            .filter((e) => "drawing" == e.objectType)
            .slice(-1)[0];
          u.remove(a), u.requestRenderAll();
        }
      }),
      (document.onkeydown = function (e) {
        switch (e.keyCode) {
          case 38:
            u.getActiveObject() &&
              ((u.getActiveObject().top -= 1), u.requestRenderAll());
            break;
          case 40:
            u.getActiveObject() &&
              ((u.getActiveObject().top += 1), u.requestRenderAll());
            break;
          case 37:
            u.getActiveObject() &&
              ((u.getActiveObject().left -= 1), u.requestRenderAll());
            break;
          case 39:
            u.getActiveObject() &&
              ((u.getActiveObject().left += 1), u.requestRenderAll());
        }
      }),
      t.find("#custom-theme").on("change", function () {
        var a = e(this).val(),
          n =
            palleonParams.baseURL + "css/" + a + palleonParams.suffix + ".css";
        e("#palleon-theme-link").attr("href", n);
      }),
      t.find("#custom-font-size").on("input", function () {
        e("html").css("font-size", e(this).val() + "px");
      }),
      t.find("#custom-background").on("change", function () {
        var a = e(this).val();
        "" != a && t.find("#palleon-content").css("background-color", a);
      }),
      t.find("#custom-image-background").on("change", function () {
        var a = e(this).val();
        t.find("#palleon-canvas-color").spectrum("set", a),
          "" == a
            ? ((u.backgroundColor = "transparent"), u.requestRenderAll())
            : ((u.backgroundColor = a), u.requestRenderAll());
      }),
      t.find("#palleon-preferences-save").on("click", function () {
        var a = e(this),
          n = {},
          l = [],
          i = [];
        t.find("#palleon-preferences .preference").each(function (a, n) {
          l.push(e(this).attr("id")), i.push(e(this).val());
        });
        for (let e = 0; e < l.length; e++) n[l[e]] = i[e];
        var o = {
          action: "savePreferences",
          nonce: palleonParams.nonce,
          preferences: JSON.stringify(n),
        };
        e.ajax({
          url: palleonParams.ajaxurl,
          data: o,
          type: "POST",
          beforeSend: function () {
            a.prop("disabled", !0);
          },
          success: function () {
            toastr.success(palleonParams.settingsaved, palleonParams.success);
          },
          complete: function () {
            a.prop("disabled", !1);
          },
          error: function (e, a, n) {
            e.status && 400 == e.status
              ? toastr.error(e.responseText, palleonParams.error)
              : toastr.error(palleonParams.wrong, palleonParams.error);
          },
        });
      }),
      e(window).on("resize", function () {
        M();
      });
  }),
    new FontFaceObserver("Material Icons")
      .load(null, 1e4)
      .then(function () {
        e("#palleon").find("#palleon-main-loader").fadeOut(200),
          setTimeout(function () {
            e("#palleon").find("#palleon-main-loader").remove();
          }, 300);
      })
      .catch(function (a) {
        console.log(a), e("#palleon").find("#palleon-main-loader").remove();
      }),
    e(document).ready(function () {
      e("#palleon").palleon({
        enableGLFiltering: palleonParams.enableGLFiltering,
        textureSize: palleonParams.textureSize,
      });
    });
})(jQuery);
